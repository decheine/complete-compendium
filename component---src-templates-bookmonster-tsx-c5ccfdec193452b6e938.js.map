{"version":3,"file":"component---src-templates-bookmonster-tsx-c5ccfdec193452b6e938.js","mappings":"yLA2CA,IA5B4BA,KACxB,MAAM,EAACC,EAAY,EAACC,IAAiBC,EAAAA,EAAAA,UAAS,IAGxCC,EAAmBA,KAErB,MAAMC,EAAcC,OAAOC,KAAKC,GAEhC,QAAmBC,IAAhBJ,EAA0B,CAEzB,MAAMK,EAAaL,GAdTM,EAckCN,EAAYO,OAbzDC,KAAKC,MAAMD,KAAKE,SAAWJ,KAc1BT,EAAcQ,EAClB,CAhBR,IAAsBC,CAgBd,EAOJ,OAJAK,EAAAA,EAAAA,YAAU,KACNZ,GAAkB,GACnB,IAGCa,EAAAA,cAAA,OAAKC,UAAU,uBACXD,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAI,aAAenB,GACrBgB,EAAAA,cAAA,OAAKC,UAAU,gBAAgBG,QAASjB,GAAkB,mBAE5D,C,qBCdd,MAAMkB,EAAS,IAAIC,IAAoB,CACnC,CAAC,UAAY,WACb,CAAC,KAAY,WACb,CAAC,KAAY,WACb,CAAC,KAAY,WACb,CAAC,KAAY,WACb,CAAC,KAAY,WACb,CAAC,KAAY,WACb,CAAC,KAAY,WACb,CAAC,KAAY,WACb,CAAC,KAAY,WACb,CAAC,KAAY,WACb,CAAC,KAAY,WACb,CAAC,KAAY,WACb,CAAC,KAAY,WACb,CAAC,KAAY,WACb,CAAC,KAAY,WACb,CAAC,KAAY,WACb,CAAC,KAAY,WACb,CAAC,KAAY,WACb,CAAC,KAAY,WACb,CAAC,KAAY,aAMjB,K,8FCjCA,MAAMC,EAAeC,EAAQ,MACvBC,EAAaD,EAAQ,MA6M3B,UAnJ6CE,IAAoB,IAAnB,YAACC,GAAaD,EAC1D,MAAME,EAAwCD,EAMxC3B,EAAc4B,EAAkB5B,YAGhC6B,GAFQD,EAAkBE,MAChBF,EAAkBG,QACLH,EAAkBI,UACzCC,EAAmBL,EAAkBM,SACrCC,EAAeP,EAAkBO,aACjCC,EAAkBR,EAAkBQ,gBAM1C,IAAIC,EAAgB,KAChBC,GAAc,EACdC,EAAY,GAUhB,GANID,KAFDV,EAAkBY,aAAaC,OAAO,KAAMb,EAAkBY,aAAaC,OAAO,GAAGC,MAAM,IAAIC,OAAOf,EAAkB5B,YAAa,OAQrIsC,EAAY,CAEXC,EAAY,wBAA0BX,EAAkB5B,YAAc,OACtE,IAAI4C,EAAoB,+EAExBP,EAAgBrB,EAAAA,cAAA,OAAKC,UAAW4B,EAAAA,GAAkCC,IAAKP,EACvEQ,IAAKnB,EAAkBY,aAAaV,MACpCA,MAAOF,EAAkBY,aAAaV,MACtCkB,QAASC,IAAqB,IAApB,cAACC,GAAcD,EACrBC,EAAcC,QAAU,KACxBD,EAAcH,IAAM,mEACpBG,EAAcJ,IAAMF,EACpBM,EAAcpB,MAAQ,oBAAsBF,EAAkBY,aAAaV,KAAK,GAGxF,CAGuB,oBAAbsB,WACNA,SAAStB,MAAQF,EAAkBY,aAAaV,MAAQ,0BAI5D,MAAMuB,EAAezB,EAAkBY,aAAac,QAC9CC,EAAchC,EAAa8B,GACjC,IAAIG,EAAU,MACVC,EAAa,CAAC,EAClB,GAAGF,EAAY,CACXC,EAAU,OAASD,EAEnBE,EAAa,CAACC,MAAOrC,EAAAA,EAAOsC,IAAIJ,GACpC,CAIA,MAAMK,EAAWhC,EAAkBY,aAAaoB,SAC1CC,EAAqC7C,EAAAA,cAAA,OAAKC,UAAU,WAAW6C,wBAAyB,CAACC,OAAQH,KASvG,MAPkB,SAAf5D,IACDgE,QAAQC,IAAI,+BACZD,QAAQC,IAAI,OAAQpC,GACpBmC,QAAQC,IAAI,OAAQhC,IAKpBjB,EAAAA,cAACkD,EAAAA,EAAM,CAACC,IAAG,YAAc/B,EAAe,IAAID,EAAY,IAAInC,GAC1DgB,EAAAA,cAAA,WACEA,EAAAA,cAAA,WACEA,EAAAA,cAAA,OAAKC,UAAW4B,EAAAA,IACd7B,EAAAA,cAAA,OAAKC,UAAW4B,EAAAA,IACZ7B,EAAAA,cAACE,EAAAA,KAAI,CAACD,UAAW4B,EAAAA,GAAkC1B,GAAI,MAAQU,GAAsB,aAGzFb,EAAAA,cAAA,OAAKC,UAAW4B,EAAAA,IACZ7B,EAAAA,cAACjB,EAAAA,EAAmB,OAExBiB,EAAAA,cAAA,OAAKC,UAAW4B,EAAAA,IACZ7B,EAAAA,cAACE,EAAAA,KAAI,CAACD,UAAW4B,EAAAA,GAAkC1B,GAAI,MAAQc,GAAkB,WAM3FjB,EAAAA,cAAA,OAAKC,UAAW4B,EAAAA,IACZ7B,EAAAA,cAAA,MAAIoD,MAAOX,GAAa7B,EAAkBY,aAAaV,OACvDd,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAI,YAAcI,EAAaK,EAAkBY,aAAac,UAChEtC,EAAAA,cAAA,OAAKC,UAAW4B,EAAAA,GAAgCC,IAAG,iBAAmBvB,EAAaK,EAAkBY,aAAac,SAAQ,OAASP,IAAKnB,EAAkBY,aAAac,QAAU,wBAAyBxB,MAAOF,EAAkBY,aAAac,YAIxPtC,EAAAA,cAAA,MAAIC,UAAYuC,IAChBxC,EAAAA,cAAA,MAAIC,UAAY4B,EAAAA,KAEhB7B,EAAAA,cAAA,OAAKC,UAAW4B,EAAAA,IACfR,GAIAwB,EAGD7C,EAAAA,cAAA,OAAKC,UAAW4B,EAAAA,IACd7B,EAAAA,cAAA,OAAKC,UAAW4B,EAAAA,IAA4B,gBAG5C7B,EAAAA,cAAA,OAAKC,UAAW4B,EAAAA,GAEPjB,EAAkBY,aAAa6B,eAAe,QAAmD,MAAzCzC,EAAkBY,aAAkB,IACzFZ,EAAkBY,aAAkB,IAAE8B,KAAKC,GAEnCvD,EAAAA,cAAA,OAAKwD,IAAKD,GACNvD,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAI,YAAcI,EAAaK,EAAkBY,aAAac,SAAW,IAAMiB,GAAM9C,EAAW8C,GAAK,KAAGA,EAAI,KAClHvD,EAAAA,cAAA,cAKd,YAcL,C,uSC5NN,IAOIyD,EAAM,iCAQNC,EAAe,2CACfC,EAAkB,+CAClBC,EAAa,yCACbC,EAAiB,8CACjBC,EAAkB,+CAKlBC,EAAe,2CACfC,EAAa,yCAEbC,EAAY,wCACZV,EAAM,iCAENW,EAAW,sC","sources":["webpack://adnd-compendium-static-frontend/./src/components/RandomMonsterButton.tsx","webpack://adnd-compendium-static-frontend/./src/styles/SettingColors.ts","webpack://adnd-compendium-static-frontend/./src/templates/bookmonster.tsx","webpack://adnd-compendium-static-frontend/./src/styles/modules/monsterpage.module.css"],"sourcesContent":["// Random monster button.\nimport React from \"react\"\n\nimport { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n\nimport './RandomMonsterButton.css';\n\nimport AA_KEYS_TITLES from '../data/AA_KEYS_TITLES.json'\nimport { Link } from \"gatsby\";\n\nfunction getRandomInt(max: number) {\n    return Math.floor(Math.random() * max);\n  }\n\nconst RandomMonsterButton = () => {\n    const [monster_key, setMonsterKey] = useState('');\n    // const [monster_title, setMonsterTitle] = useState('');\n\n    const getRandomMonster = () => {\n        // if DataService.monsterTitles is undefined\n        const monsterKeys = Object.keys(AA_KEYS_TITLES);\n        //console.log(\"Random. localmonsterkeys\",monsterKeys  )\n        if(monsterKeys !== undefined){\n\n            const random_key = monsterKeys[getRandomInt(monsterKeys.length)];\n            setMonsterKey(random_key);\n        }\n    }\n\n    useEffect(() => {\n        getRandomMonster();\n    }, []);\n\n    return (\n        <div className=\"RandomMonsterButton\">\n            <Link to={\"/appendix/\" + monster_key}>\n                <div className=\"random-button\" onClick={getRandomMonster}>Random Monster</div>\n            </Link>\n        </div>\n    );\n}\n\nexport default RandomMonsterButton;","\n// const COLORS = {\n//     add2_01: \"#1250A2\",\n//     aq: \"#cc9900\",\n//     al: \"#78b345\",\n//     br: \"#4682b4\",\n//     ds: \"#ca5804\",\n//     dr: \"#cc9900\",\n//     dl: \"#ffa500\",\n//     du: \"#4C4B51\",\n//     ff: \"#1250A2\",\n//     fr: \"#ffd700\",\n//     gh: \"#ff8c46\",\n//     kt: \"#ffa000\",\n//     lm: \"#46c8c8\",\n//     rd: \"#7f0000\",\n//     mz: \"#b8860b\",\n//     ms: \"#ff3333\",\n//     ps: \"#b8860b\",\n//     rv: \"#7f0000\",\n//     rs: \"#993366\",\n//     sj: \"#4c8bc2\",\n//     th: \"#ff6633\"\n// }\n// For Titles\nconst COLORS = new Map<string, string>([\n    [\"add2_01\",  \"#1250A2\"], // /\n    [\"aq\",       \"#957000\"], // /\n    [\"al\",       \"#568132\"], // /\n    [\"br\",       \"#427aa9\"], // /\n    [\"ds\",       \"#c25404\"], // /\n    [\"dr\",       \"#957000\"], // /\n    [\"dl\",       \"#9b6400\"], // /\n    [\"du\",       \"#4C4B51\"], // /\n    [\"ff\",       \"#b15f3d\"], // /\n    [\"fr\",       \"#191970\"], // /\n    [\"gh\",       \"#b06030\"], // /\n    [\"kt\",       \"#8d7206\"], // /\n    [\"lm\",       \"#2d8181\"], // /\n    [\"rd\",       \"#7f0000\"], // /\n    [\"mz\",       \"#976e09\"], // /\n    [\"ms\",       \"#e02d2d\"], // /\n    [\"ps\",       \"#976e09\"], // /\n    [\"rv\",       \"#7f0000\"], // /\n    [\"rs\",       \"#993366\"], // /\n    [\"sj\",       \"#4279a9\"], // /\n    [\"th\",       \"#c64f28\"], // \n])\n\n\n\n\nexport default COLORS","import React from \"react\"\nimport Layout from '../components/Layout';\nimport {  PageProps, Link, graphql, HeadFC  } from \"gatsby\";\n\nimport { CreatePagesArgs } from 'gatsby';\nimport { Interweave } from \"interweave\";\n\n// Formatting\nimport \"@styles/SettingColors.css\"\n// import \"../styles/MonsterPage.css\"\nimport COLORS from '@styles/SettingColors'\nimport RandomMonsterButton from \"@components/RandomMonsterButton\";\n\nimport * as monsterPageStyles from \"@styles/modules/monsterpage.module.css\"\n\n// export default function Container({ children }) {\n//   return <div className={containerStyles.container}>{children}</div>\n// }\n\nconst cat_acronyms = require('@data/CatAcronyms.json')\nconst sorted_tsr = require('@data/sortedtsr.json')\n///////////\n// Styles\n\nconst settingImageStyle = {\n  float: \"right\",\n  width: \"150px\",\n}\n\nconst headingStyles = {\n  marginTop: 0,\n  marginBottom: 64,\n  maxWidth: 320,\n}\n\ntype MonsterDataType = {\n    TSR: string[],\n    fullBody: string,\n    images: string[],\n    setting: string,\n    statblock: Object,\n    title: string\n}\n\ntype MonsterPageContext = {\n    monster_key: string\n    monster_data: MonsterDataType\n    sources: string[]\n    statblock_names: string[]\n    title: string\n    prev_key: string\n    next_key: string\n    catelog_book: string\n    catelog_setting: string\n}\n\n\ntype MonsterDataWrapper = {\n    monster_page: MonsterPageContext\n    // workaround syntax warning fix,\n    // the following aren't used in reality, only\n    // monster_page\n    monster_key: string\n    monster_data: MonsterDataType\n    sources: string[]\n    statblock_names: string[]\n    title: string\n    prev_key: string\n    next_key: string\n    catelog_book: string\n    catelog_setting: string\n    \n}\n\ninterface Props {\n  pageContext: MonsterDataWrapper\n  }\n\nconst BookMonsterTemplate: React.FC<Props> = ({pageContext }) => {\n  const monster_page_data: MonsterPageContext = pageContext\n  // const monster_object = pageContext.monster_object\n//   console.log(\"monster page\")\n//   console.log(monster_page_data)\n  // console.log(\"monster template\")\n  // console.log(monster_object)\n  const monster_key = monster_page_data.monster_key\n  const title = monster_page_data.title\n  const sources = monster_page_data.sources\n  const previous_monster_key = monster_page_data.prev_key\n  const next_monster_key = monster_page_data.next_key\n  const catelog_book = monster_page_data.catelog_book\n  const catelog_setting = monster_page_data.catelog_setting\n//   console.log(previous_monster_key, next_monster_key)\n  // Checking Main Image\n  //  If the regex pattern matches, know we NEED an image. So set the url to where it should be with monster_key\n  //  and also have an onerror=\"javascript:this.src='images/default.jpg'\" to set the image to default if it doesn't exist\n  //  If doesn't need image, set the bool flag and no image will be rendered\n  let monster_image = null;\n  let needs_image = true;\n  let image_url = \"\";\n  // if(monster_page_data.monster_data.images[1]) regex contains monster_key\n  if(monster_page_data.monster_data.images[1] && monster_page_data.monster_data.images[1].match(new RegExp(monster_page_data.monster_key, \"g\"))){\n      // console.log(\"Should have image\")\n      needs_image = true;\n  } else {\n      // console.log(\"Does not have image\")\n      needs_image = false;\n  }\n\n  if(needs_image){\n      // Set image url\n      image_url = \"/images/monsters/img/\" + monster_page_data.monster_key + \".gif\"\n      let image_placeholder = \"https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg\"\n\n      monster_image = <img className={monsterPageStyles.monsterImage}   src={image_url}\n      alt={monster_page_data.monster_data.title} \n      title={monster_page_data.monster_data.title} \n      onError={({currentTarget}) => {\n          currentTarget.onerror = null;\n          currentTarget.alt = \"This monster is missing it's image. It will be found eventually.\";\n          currentTarget.src = image_placeholder;\n          currentTarget.title = \"Missing image of \" + monster_page_data.monster_data.title;\n      }}/>\n\n  } \n    \n  // Change document title to monster title\n  if(typeof document !== 'undefined'){\n      document.title = monster_page_data.monster_data.title + \" - Complete Compendium\";\n  }\n\n  // Handle setting and accent color.\n  const setting_name = monster_page_data.monster_data.setting;\n  const setting_acr = cat_acronyms[setting_name]\n  var hrClass = \"hr2\"\n  var titleStyle = {}\n  if(setting_acr){\n      hrClass = \"hr2-\" + setting_acr\n      const colorVar = \"--color-\" + setting_acr\n      titleStyle = {color: COLORS.get(setting_acr)}\n  }\n\n  // Title style\n\n  const fullBody = monster_page_data.monster_data.fullBody;\n  const interweaveMonsterBody: JSX.Element = <div className=\"set-html\" dangerouslySetInnerHTML={{__html: fullBody}} />\n\n  if(monster_key == \"horax\"){\n    console.log(\"booktemplate monster, HORAX\")\n    console.log(\"prev\", previous_monster_key)\n    console.log(\"next\", next_monster_key)\n  }\n\n  // const { book_data } = data\n  return (\n    <Layout url={`/catalog/${catelog_setting}/${catelog_book}/${monster_key}`}>\n      <div>\n        <div>\n          <div className={monsterPageStyles.monsterNavLinks}>\n            <div className={monsterPageStyles.monsterNav}>\n                <Link className={monsterPageStyles.monsterNavLink} to={\"../\" + previous_monster_key}>Previous</Link>\n            </div>\n            {/* Random Monster */}\n            <div className={monsterPageStyles.monsterNav}>\n                <RandomMonsterButton />\n            </div>\n            <div className={monsterPageStyles.monsterNav}>\n                <Link className={monsterPageStyles.monsterNavLink} to={\"../\" + next_monster_key}>Next</Link>\n            </div>\n          </div>\n        </div>\n\n      {/* TITLE */}\n      <div className={monsterPageStyles.topHeader}>\n          <h1 style={titleStyle}>{monster_page_data.monster_data.title}</h1>\n          <Link to={\"/catalog/\" + cat_acronyms[monster_page_data.monster_data.setting]}>\n              <img className={monsterPageStyles.settingImage} src={`/img_settings/${cat_acronyms[monster_page_data.monster_data.setting]}.gif`}  alt={monster_page_data.monster_data.setting + \"Campaign Setting Logo\"} title={monster_page_data.monster_data.setting}/>\n          </Link>\n      </div>\n      \n      <hr className ={hrClass}/>\n      <hr className ={monsterPageStyles.hr1}/>\n\n      <div className={monsterPageStyles.monsterImgFrame}>\n      {monster_image}\n      </div>\n\n      {/* <Interweave className=\"interweave\" content={fullBody} /> */}\n      {interweaveMonsterBody}\n\n      {/* TSR Array */}\n      <div className={monsterPageStyles.sourceList}>\n        <div className={monsterPageStyles.tsrLabel}>\n            Sourcebooks:\n        </div>\n        <div className={monsterPageStyles.tsr}>\n            {\n                (monster_page_data.monster_data.hasOwnProperty(\"TSR\") && monster_page_data.monster_data[\"TSR\"] != null) ?\n                    monster_page_data.monster_data[\"TSR\"].map((tsr: string) => {\n                        return (\n                            <div key={tsr}>\n                                <Link to={\"/catalog/\" + cat_acronyms[monster_page_data.monster_data.setting] + \"/\" + tsr}>{sorted_tsr[tsr]} ({tsr})</Link>\n                                <br/>\n                            </div>\n                        )\n                    }\n                )\n                : \"No TSR\"\n            }\n        </div>\n    </div>\n\n    {/* LAST MODIFIED */}\n    {/* <div className=\"last-modified\">\n        Last Modified: {monster_page_data.updatedAt}\n    </div> */}\n\n\n\n\n      </div>\n    </Layout>\n  )\n}\n\nexport default BookMonsterTemplate","// extracted by mini-css-extract-plugin\nexport var RandomMonsterButton = \"monsterpage-module--RandomMonsterButton--65e5f\";\nexport var StatblockImage = \"monsterpage-module--Statblock-Image--5cd11\";\nexport var bk = \"monsterpage-module--bk--0c7e9\";\nexport var bodyBlocks = \"monsterpage-module--body-blocks--a22b5\";\nexport var cn = \"monsterpage-module--cn--2c6ef\";\nexport var f = \"monsterpage-module--f--f6dca\";\nexport var fi = \"monsterpage-module--fi--5f664\";\nexport var hr1 = \"monsterpage-module--hr1--f5b5c\";\nexport var hr2 = \"monsterpage-module--hr2--958f4\";\nexport var hr3 = \"monsterpage-module--hr3--64978\";\nexport var interweave = \"monsterpage-module--interweave--f54cc\";\nexport var ip = \"monsterpage-module--ip--d7cfc\";\nexport var lastModified = \"monsterpage-module--last-modified--850e5\";\nexport var loading = \"monsterpage-module--loading--0674d\";\nexport var monsterBody = \"monsterpage-module--monster-body--65cac\";\nexport var monsterImage = \"monsterpage-module--monster-image--bb97d\";\nexport var monsterImgFrame = \"monsterpage-module--monster-img-frame--67133\";\nexport var monsterNav = \"monsterpage-module--monster-nav--3c352\";\nexport var monsterNavLink = \"monsterpage-module--monster-nav-link--495ca\";\nexport var monsterNavLinks = \"monsterpage-module--monster-nav-links--c9a5a\";\nexport var ni = \"monsterpage-module--ni--d20dd\";\nexport var psionicTableData = \"monsterpage-module--psionic-table-data--bec3c\";\nexport var psionicsSummary = \"monsterpage-module--psionics-summary--e13ca\";\nexport var psionicsTable = \"monsterpage-module--psionics-table--3af5a\";\nexport var settingImage = \"monsterpage-module--setting-image--e8b92\";\nexport var sourceList = \"monsterpage-module--source-list--66a63\";\nexport var statblock = \"monsterpage-module--statblock--52b79\";\nexport var topHeader = \"monsterpage-module--top-header--5efbc\";\nexport var tsr = \"monsterpage-module--tsr--2eb82\";\nexport var tsrFooter = \"monsterpage-module--tsr-footer--866d8\";\nexport var tsrLabel = \"monsterpage-module--tsr-label--b394a\";"],"names":["RandomMonsterButton","monster_key","setMonsterKey","useState","getRandomMonster","monsterKeys","Object","keys","AA_KEYS_TITLES","undefined","random_key","max","length","Math","floor","random","useEffect","React","className","Link","to","onClick","COLORS","Map","cat_acronyms","require","sorted_tsr","_ref","pageContext","monster_page_data","previous_monster_key","title","sources","prev_key","next_monster_key","next_key","catelog_book","catelog_setting","monster_image","needs_image","image_url","monster_data","images","match","RegExp","image_placeholder","monsterPageStyles","src","alt","onError","_ref2","currentTarget","onerror","document","setting_name","setting","setting_acr","hrClass","titleStyle","color","get","fullBody","interweaveMonsterBody","dangerouslySetInnerHTML","__html","console","log","Layout","url","style","hasOwnProperty","map","tsr","key","hr1","monsterImage","monsterImgFrame","monsterNav","monsterNavLink","monsterNavLinks","settingImage","sourceList","topHeader","tsrLabel"],"sourceRoot":""}