{"version":3,"file":"ba78579a03bfb27a4a40eb15d3e939232a794893-19bcf94fb292aefe643f.js","mappings":"iMAYA,MAAMA,EAAWC,EAAQ,MACnBC,EAAcD,EAAQ,MAEtBE,EAAQF,EAAQ,MAgItB,MA3FqBG,IACjB,IAAIC,EAAe,GACfC,EAAO,GACPC,EAAa,EACbC,EAAO,GAIPC,EAAcL,EAAME,KAAK,GAyE7B,OAvEAF,EAAME,KAAKI,SAAQC,IAEf,OAAQF,GACJ,IAAK,WACD,OAAQF,GACJ,KAAK,EACDC,EAAOG,EACP,MACJ,KAAK,EACDH,EAAON,EAAYS,GACnB,MACJ,QACIH,EAAO,UAEf,MACJ,IAAK,UACD,OAAOD,GACH,KAAK,EACDC,EAAOG,EACP,MACJ,KAAK,EACDH,EAAOR,EAASW,GAChB,MACJ,KAAK,EACDH,EAAOL,EAAMQ,GAAMC,MACnB,MACJ,KAAK,EACDJ,EAAON,EAAYS,GACnB,MACJ,QACIH,EAAM,UAGd,MACJ,IAAK,QACD,GACS,IADFD,EAECC,EAAOG,OAGPH,EAAO,QAMvBF,GAAI,IAAQK,EAEK,GAAdJ,GACCF,EAAQQ,KACJC,EAAAA,cAAA,OAAKC,UC/GC,sCD+GoCC,IAAG,SAAWL,GAAQ,MAMxEN,EAAQQ,KAGAC,EAAAA,cAACG,EAAAA,KAAI,CAACF,UCrHC,uCDqHqCG,GAAIZ,EAAMU,IAAKL,GAAOH,EAAK,MAK/ED,GAAY,IAQZO,EAAAA,cAAA,OAAKC,UCjIQ,sCDoIRV,EACDS,EAAAA,cAAA,OAAKC,UCxIC,oCDyIJ,E,UErFZ,MA7BcX,IAGZ,MAAMe,EAAgBf,EAAMgB,IAAIC,MAAM,KAWtC,OATGF,EAAcG,OACfH,EAAcI,QAMhBC,QAAQC,IAAIN,GAGVL,EAAAA,cAAA,OAAKC,UCrCgB,wCDsCnBD,EAAAA,cAACY,EAAAA,EAAM,MACPZ,EAAAA,cAAA,OAAKC,UCzCO,gCD0CZD,EAAAA,cAACa,EAAU,CAACrB,KAAMa,IAEff,EAAMwB,UAETd,EAAAA,cAACe,EAAAA,EAAM,MACH,C","sources":["webpack://complete-compendium/./src/components/BreadCrumb.tsx","webpack://complete-compendium/./src/styles/modules/breadcrumb.module.css","webpack://complete-compendium/./src/components/Layout.tsx","webpack://complete-compendium/./src/styles/modules/layout.module.css"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\n/**\n * Breadcrum react component that displays the current page's breadcrumb\n * Showing Catalog > Setting > Book\n */\n\n// Breadcrum react component that displays the current page's breadcrumb showing Catalog > Setting > Book\nimport * as breadcrumbStyle from \"@styles/modules/breadcrumb.module.css\"\n\n// import { title } from 'process';\nconst Acronyms = require('@data/AcronymsSetting.json')\nconst KeyToTitles = require('@data/AA_KEYS_TITLES.json')\n// const BooksIDToTitles = require('@data/sortedtsr.json')\nconst BOOKS = require('../../data/all_tsr.json')\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { library, dom } from '@fortawesome/fontawesome-svg-core'\nimport {\n    faCoffee,\n    faAddressBook,\n    faAirFreshener,\n    faAmbulance,\n    faAtom,\n    faBus,\n    faCoins,\n    faDice,\n    faAngleRight\n  } from '@fortawesome/free-solid-svg-icons'\n// class BreadCrumbElement extends React.Component {\n\nfunction BreadCrumbElement (props: {link: string, text: string}) {\n    return (\n        <>\n        <Link to={props.link} className='bc-element'>\n            {\n            props.text\n           }\n        </Link>\n        </>\n    )\n}\n\n// Specify types for Props and State\ntype MyProps = {\n    path: string[]\n}\n\n\n\n// 👇️ we set the props to empty object, and set the state to {value: string}\nconst BreadCrumb = ( props: MyProps) => {\n    var builtBC: any = [];\n    var path = \"\"\n    var path_count = 0;\n    var text = \"\"\n\n    // console.log(\"breadcrumb\", props)\n    \n    var path_origin = props.path[0]\n\n    props.path.forEach(node => {\n\n        switch (path_origin){\n            case \"appendix\":\n                switch (path_count) {\n                    case 0:\n                        text = node\n                        break;\n                    case 1: // Monster title\n                        text = KeyToTitles[node]\n                        break;\n                    default:\n                        text = \"APendix\"\n                }\n                break;\n            case \"catalog\":\n                switch(path_count) {\n                    case 0: // Catalog\n                        text = node\n                        break;\n                    case 1: // Setting\n                        text = Acronyms[node]\n                        break;\n                    case 2: // Book\n                        text = BOOKS[node].title\n                        break;\n                    case 3: // Monster\n                        text = KeyToTitles[node]\n                        break;\n                    default:\n                        text= \"Catalog\"\n                }\n\n                break;\n            case \"about\":\n                switch(path_count){\n                    case 0:\n                        text = node\n                        break;\n                    default:\n                        text = \"About\"\n                }\n\n                break;\n        }\n\n        path += `/${node}`\n\n        if(path_count != 0){\n            builtBC.push(\n                <div className={breadcrumbStyle.arrowBox} key={`arrow-${node}`}>\n                    /\n                    {/* <FontAwesomeIcon icon={faAngleRight} className={breadcrumbStyle.rightArrow} /> */}\n                </div>\n            )\n        }\n        builtBC.push(\n        \n            // <div className={breadcrumbStyle.breadcrumb} key={node}>\n                <Link className={breadcrumbStyle.bcElement} to={path} key={node}>{text} </Link>\n            )\n        // builtBC.push(\n        //     <FontAwesomeIcon icon=\"angle-right\" className='right-arrow' />\n        // )\n        path_count++\n    }\n    )\n    // <div className={breadcrumbStyle.bcElement}>{x}</>\n\n\n\n    return (\n        <div className={breadcrumbStyle.bcFrame}>\n            {/* {props.path} */}\n            {/* <div className={breadcrumbStyle.startCap}/> */}\n            {builtBC}\n            <div className={breadcrumbStyle.bcBg}/>\n        </div>\n    )\n}\n\nexport default BreadCrumb;\n\n","// extracted by mini-css-extract-plugin\nexport var arrowBox = \"breadcrumb-module--arrow-box--8f143\";\nexport var bcBg = \"breadcrumb-module--bc-bg--8b107\";\nexport var bcCatalog = \"breadcrumb-module--bc-catalog--653f8\";\nexport var bcElement = \"breadcrumb-module--bc-element--36f40\";\nexport var bcFrame = \"breadcrumb-module--bc-frame--78140\";\nexport var breadcrumb = \"breadcrumb-module--breadcrumb--8d16f\";\nexport var rightArrow = \"breadcrumb-module--right-arrow--1e6a3\";\nexport var startCap = \"breadcrumb-module--start-cap--ca81e\";","import React from \"react\"\nimport { PropsWithChildren } from 'react'\n\nimport Navbar from \"./Navbar\";\nimport BreadCrumb from \"./BreadCrumb\";\n// import './Layout.css'\nimport * as layoutStyle from '@styles/modules/layout.module.css'\n\nimport Footer from \"./Footer\";\n/**\n * \n * @param param0 \n * @returns \n * \n * \n * \n * \n */\n\ntype LayoutProps = {\n  url: string\n}\n\n\n\nconst Layout = (props: PropsWithChildren<LayoutProps>) => {\n    // const url = typeof window !== 'undefined' ? window.location.pathname : '';\n    // split path\n    const relative_locs = props.url.split(\"/\")\n    // console.log(\"Layout props\",props, relative_locs)\n    if(relative_locs.length < 3){\n      relative_locs.shift();\n      \n    } else {\n      // relative_locs.pop();\n      relative_locs.shift();\n    }\n    console.log(relative_locs)\n    // console.log(relative_locs)\n    return (\n      <div className={layoutStyle.layoutWrapper}>\n        <Navbar/>\n        <div className={layoutStyle.layout}>\n        <BreadCrumb path={relative_locs}/>\n          {/* {pathname !== \"/\" ? <BreadCrumb title={breadCrumbs[1]} setting={breadCrumbs[2]} book={breadCrumbs[3]} monster_key={breadCrumbs[4]}/> : null} */}\n          {props.children}\n        </div>\n        <Footer/>\n      </div>\n    );\n};\n\n\n\n  export default Layout","// extracted by mini-css-extract-plugin\nexport var layout = \"layout-module--layout--d56eb\";\nexport var layoutMain = \"layout-module--layout-main--c275b\";\nexport var layoutWrapper = \"layout-module--layout-wrapper--c2f92\";"],"names":["Acronyms","require","KeyToTitles","BOOKS","props","builtBC","path","path_count","text","path_origin","forEach","node","title","push","React","className","key","Link","to","relative_locs","url","split","length","shift","console","log","Navbar","BreadCrumb","children","Footer"],"sourceRoot":""}