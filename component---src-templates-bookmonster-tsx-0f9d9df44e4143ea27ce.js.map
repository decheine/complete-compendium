{"version":3,"file":"component---src-templates-bookmonster-tsx-0f9d9df44e4143ea27ce.js","mappings":"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","sources":["webpack://adnd-compendium-static-frontend/./src/components/BreadCrumb.tsx","webpack://adnd-compendium-static-frontend/./src/styles/modules/breadcrumb.module.css","webpack://adnd-compendium-static-frontend/./src/components/Layout.tsx","webpack://adnd-compendium-static-frontend/./src/styles/modules/layout.module.css","webpack://adnd-compendium-static-frontend/./src/components/RandomMonsterButton.tsx","webpack://adnd-compendium-static-frontend/./src/styles/SettingColors.ts","webpack://adnd-compendium-static-frontend/./src/templates/bookmonster.tsx","webpack://adnd-compendium-static-frontend/./src/styles/modules/monsterpage.module.css"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\n/**\n * Breadcrum react component that displays the current page's breadcrumb\n * Showing Catalog > Setting > Book\n */\n\n// Breadcrum react component that displays the current page's breadcrumb showing Catalog > Setting > Book\nimport * as breadcrumbStyle from \"@styles/modules/breadcrumb.module.css\"\n\n// import { title } from 'process';\nconst Acronyms = require('@data/AcronymsSetting.json')\nconst KeyToTitles = require('@data/AA_KEYS_TITLES.json')\nconst BooksIDToTitles = require('@data/sortedtsr.json')\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { library, dom } from '@fortawesome/fontawesome-svg-core'\nimport {\n    faCoffee,\n    faAddressBook,\n    faAirFreshener,\n    faAmbulance,\n    faAtom,\n    faBus,\n    faCoins,\n    faDice,\n    faAngleRight\n  } from '@fortawesome/free-solid-svg-icons'\n// class BreadCrumbElement extends React.Component {\n\nfunction BreadCrumbElement (props: {link: string, text: string}) {\n    return (\n        <>\n        <Link to={props.link} className='bc-element'>\n            {\n            props.text\n           }\n        </Link>\n        </>\n    )\n}\n\n// Specify types for Props and State\ntype MyProps = {\n    path: string[]\n}\n\n\n\n// 👇️ we set the props to empty object, and set the state to {value: string}\nconst BreadCrumb = ( props: MyProps) => {\n    var builtBC: any = [];\n    var path = \"\"\n    var path_count = 0;\n    var text = \"\"\n\n    // console.log(\"breadcrumb\", props)\n    \n    var path_origin = props.path[0]\n\n    props.path.forEach(node => {\n\n        switch (path_origin){\n            case \"appendix\":\n                switch (path_count) {\n                    case 0:\n                        text = node\n                        break;\n                    case 1: // Monster title\n                        text = KeyToTitles[node]\n                        break;\n                    default:\n                        text = \"APendix\"\n                }\n                break;\n            case \"catalog\":\n                switch(path_count) {\n                    case 0: // Catalog\n                        text = node\n                        break;\n                    case 1: // Setting\n                        text = Acronyms[node]\n                        break;\n                    case 2: // Book\n                        text = BooksIDToTitles[node]\n                        break;\n                    case 3: // Monster\n                        text = KeyToTitles[node]\n                        break;\n                    default:\n                        text= \"Catalog\"\n                }\n\n                break;\n            case \"about\":\n                switch(path_count){\n                    case 0:\n                        text = node\n                        break;\n                    default:\n                        text = \"About\"\n                }\n\n                break;\n        }\n\n        path += `/${node}`\n\n        if(path_count != 0){\n            builtBC.push(\n                <div className={breadcrumbStyle.arrowBox} key={`arrow-${node}`}>\n                    /\n                    {/* <FontAwesomeIcon icon={faAngleRight} className={breadcrumbStyle.rightArrow} /> */}\n                </div>\n            )\n        }\n        builtBC.push(\n        \n            // <div className={breadcrumbStyle.breadcrumb} key={node}>\n                <Link className={breadcrumbStyle.bcElement} to={path} key={node}>{text} </Link>\n            )\n        // builtBC.push(\n        //     <FontAwesomeIcon icon=\"angle-right\" className='right-arrow' />\n        // )\n        path_count++\n    }\n    )\n    // <div className={breadcrumbStyle.bcElement}>{x}</>\n\n\n\n    return (\n        <div className={breadcrumbStyle.bcFrame}>\n            {/* {props.path} */}\n            {/* <div className={breadcrumbStyle.startCap}/> */}\n            {builtBC}\n            <div className={breadcrumbStyle.bcBg}/>\n        </div>\n    )\n}\n\nexport default BreadCrumb;\n\n","// extracted by mini-css-extract-plugin\nexport var arrowBox = \"breadcrumb-module--arrow-box--8f143\";\nexport var bcBg = \"breadcrumb-module--bc-bg--8b107\";\nexport var bcCatalog = \"breadcrumb-module--bc-catalog--653f8\";\nexport var bcElement = \"breadcrumb-module--bc-element--36f40\";\nexport var bcFrame = \"breadcrumb-module--bc-frame--78140\";\nexport var breadcrumb = \"breadcrumb-module--breadcrumb--8d16f\";\nexport var rightArrow = \"breadcrumb-module--right-arrow--1e6a3\";\nexport var startCap = \"breadcrumb-module--start-cap--ca81e\";","import React from \"react\"\nimport { PropsWithChildren } from 'react'\n\nimport Navbar from \"./Navbar\";\nimport BreadCrumb from \"./BreadCrumb\";\n// import './Layout.css'\nimport * as layoutStyle from '@styles/modules/layout.module.css'\n\nimport Footer from \"./Footer\";\n/**\n * \n * @param param0 \n * @returns \n * \n * \n * \n * \n */\n\ntype LayoutProps = {\n  url: string\n}\n\n\n\nconst Layout = (props: PropsWithChildren<LayoutProps>) => {\n    // const url = typeof window !== 'undefined' ? window.location.pathname : '';\n    // split path\n    const relative_locs = props.url.split(\"/\")\n    // console.log(\"Layout props\",props, relative_locs)\n    if(relative_locs.length < 3){\n      relative_locs.shift();\n      \n    } else {\n      // relative_locs.pop();\n      relative_locs.shift();\n    }\n    // console.log(relative_locs)\n    // console.log(relative_locs)\n    return (\n      <div className={layoutStyle.layoutWrapper}>\n        <Navbar/>\n        <div className={layoutStyle.layout}>\n        <BreadCrumb path={relative_locs}/>\n          {/* {pathname !== \"/\" ? <BreadCrumb title={breadCrumbs[1]} setting={breadCrumbs[2]} book={breadCrumbs[3]} monster_key={breadCrumbs[4]}/> : null} */}\n          {props.children}\n        </div>\n        <Footer/>\n      </div>\n    );\n};\n\n\n\n  export default Layout","// extracted by mini-css-extract-plugin\nexport var layout = \"layout-module--layout--d56eb\";\nexport var layoutMain = \"layout-module--layout-main--c275b\";\nexport var layoutWrapper = \"layout-module--layout-wrapper--c2f92\";","// Random monster button.\nimport React from \"react\"\n\nimport { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n\nimport './RandomMonsterButton.css';\n\nimport AA_KEYS_TITLES from '../data/AA_KEYS_TITLES.json'\nimport { Link } from \"gatsby\";\n\nfunction getRandomInt(max: number) {\n    return Math.floor(Math.random() * max);\n  }\n\nconst RandomMonsterButton = () => {\n    const [monster_key, setMonsterKey] = useState('');\n    // const [monster_title, setMonsterTitle] = useState('');\n\n    const getRandomMonster = () => {\n        // if DataService.monsterTitles is undefined\n        const monsterKeys = Object.keys(AA_KEYS_TITLES);\n        //console.log(\"Random. localmonsterkeys\",monsterKeys  )\n        if(monsterKeys !== undefined){\n\n            const random_key = monsterKeys[getRandomInt(monsterKeys.length)];\n            setMonsterKey(random_key);\n        }\n    }\n\n    useEffect(() => {\n        getRandomMonster();\n    }, []);\n\n    return (\n        <div className=\"RandomMonsterButton\">\n            <Link to={\"/appendix/\" + monster_key}>\n                <div className=\"random-button\" onClick={getRandomMonster}>Random Monster</div>\n            </Link>\n        </div>\n    );\n}\n\nexport default RandomMonsterButton;","\n// const COLORS = {\n//     add2_01: \"#1250A2\",\n//     aq: \"#cc9900\",\n//     al: \"#78b345\",\n//     br: \"#4682b4\",\n//     ds: \"#ca5804\",\n//     dr: \"#cc9900\",\n//     dl: \"#ffa500\",\n//     du: \"#4C4B51\",\n//     ff: \"#1250A2\",\n//     fr: \"#ffd700\",\n//     gh: \"#ff8c46\",\n//     kt: \"#ffa000\",\n//     lm: \"#46c8c8\",\n//     rd: \"#7f0000\",\n//     mz: \"#b8860b\",\n//     ms: \"#ff3333\",\n//     ps: \"#b8860b\",\n//     rv: \"#7f0000\",\n//     rs: \"#993366\",\n//     sj: \"#4c8bc2\",\n//     th: \"#ff6633\"\n// }\n// For Titles\nconst COLORS = new Map<string, string>([\n    [\"add2_01\",  \"#1250A2\"], // /\n    [\"aq\",       \"#957000\"], // /\n    [\"al\",       \"#568132\"], // /\n    [\"br\",       \"#427aa9\"], // /\n    [\"ds\",       \"#c25404\"], // /\n    [\"dr\",       \"#957000\"], // /\n    [\"dl\",       \"#9b6400\"], // /\n    [\"du\",       \"#4C4B51\"], // /\n    [\"ff\",       \"#b15f3d\"], // /\n    [\"fr\",       \"#191970\"], // /\n    [\"gh\",       \"#b06030\"], // /\n    [\"kt\",       \"#8d7206\"], // /\n    [\"lm\",       \"#2d8181\"], // /\n    [\"rd\",       \"#7f0000\"], // /\n    [\"mz\",       \"#976e09\"], // /\n    [\"ms\",       \"#e02d2d\"], // /\n    [\"ps\",       \"#976e09\"], // /\n    [\"rv\",       \"#7f0000\"], // /\n    [\"rs\",       \"#993366\"], // /\n    [\"sj\",       \"#4279a9\"], // /\n    [\"th\",       \"#c64f28\"], // \n])\n\n\n\n\nexport default COLORS","import React, { useEffect, useState } from \"react\"\nimport Layout from '../components/Layout';\nimport {  PageProps, Link, graphql, HeadFC  } from \"gatsby\";\n\nimport { CreatePagesArgs } from 'gatsby';\nimport { Interweave } from \"interweave\";\n\n// Formatting\nimport \"@styles/SettingColors.css\"\n// import \"../styles/MonsterPage.css\"\nimport COLORS from '@styles/SettingColors'\nimport RandomMonsterButton from \"@components/RandomMonsterButton\";\n\nimport * as monsterPageStyles from \"@styles/modules/monsterpage.module.css\"\n\n// export default function Container({ children }) {\n//   return <div className={containerStyles.container}>{children}</div>\n// }\nconst isBrowser = typeof window !== \"undefined\"\n\nconst cat_acronyms = require('@data/CatAcronyms.json')\nconst sorted_tsr = require('@data/sortedtsr.json')\n///////////\n// Styles\n\nconst settingImageStyle = {\n  float: \"right\",\n  width: \"150px\",\n}\n\nconst headingStyles = {\n  marginTop: 0,\n  marginBottom: 64,\n  maxWidth: 320,\n}\n\ntype MonsterDataType = {\n    TSR: string[],\n    fullBody: string,\n    images: string[],\n    setting: string,\n    statblock: Object,\n    title: string\n}\n\ntype MonsterPageContext = {\n    monster_key: string\n    monster_data: MonsterDataType\n    sources: string[]\n    statblock_names: string[]\n    title: string\n    prev_key: string\n    next_key: string\n    catelog_book: string\n    catelog_setting: string\n    monster_path: string\n}\n\n\ntype MonsterDataWrapper = {\n    monster_page: MonsterPageContext\n    // workaround syntax warning fix,\n    // the following aren't used in reality, only\n    // monster_page\n    monster_key: string\n    monster_data: MonsterDataType\n    sources: string[]\n    statblock_names: string[]\n    title: string\n    prev_key: string\n    next_key: string\n    catelog_book: string\n    catelog_setting: string\n    \n}\n\ninterface Props {\n  pageContext: MonsterPageContext\n  }\n\nconst BookMonsterTemplate: React.FC<Props> = ({pageContext }) => {\n  const [screenSize, setScreenSize] = useState(getCurrentDimension());\n\n  function getCurrentDimension(){\n    if(isBrowser){\n\n      return {\n        width: global.window.innerWidth,\n      \theight: global.window.innerHeight\n      }\n    } else {\n      return {\n        width: 0,\n        height: 0,\n      }\n    }\n}\n\n  useEffect(() => {\n    const updateDimension = () => {\n      setScreenSize(getCurrentDimension())\n    }\n    if(isBrowser)\n      global.window.addEventListener('resize', updateDimension);\n    \n    return(() => {\n        global.window.removeEventListener('resize', updateDimension);\n    })\n  }, [screenSize])\n  const monster_page_data: MonsterPageContext = pageContext\n  // const monster_object = pageContext.monster_object\n//   console.log(\"monster page\")\n//   console.log(monster_page_data)\n  // console.log(\"monster template\")\n  // console.log(monster_object)\n  const monster_key = monster_page_data.monster_key\n  const title = monster_page_data.title\n  const sources = monster_page_data.sources\n  const previous_monster_key = monster_page_data.prev_key\n  const next_monster_key = monster_page_data.next_key\n  const catelog_book = monster_page_data.catelog_book\n  const catelog_setting = monster_page_data.catelog_setting\n//   console.log(previous_monster_key, next_monster_key)\n  // Checking Main Image\n  //  If the regex pattern matches, know we NEED an image. So set the url to where it should be with monster_key\n  //  and also have an onerror=\"javascript:this.src='images/default.jpg'\" to set the image to default if it doesn't exist\n  //  If doesn't need image, set the bool flag and no image will be rendered\n  let monster_image = null;\n  let needs_image = true;\n  let image_url = \"\";\n  // if(monster_page_data.monster_data.images[1]) regex contains monster_key\n  if(monster_page_data.monster_data.images[1] && monster_page_data.monster_data.images[1].match(new RegExp(monster_page_data.monster_key, \"g\"))){\n      // console.log(\"Should have image\")\n      needs_image = true;\n  } else {\n      // console.log(\"Does not have image\")\n      needs_image = false;\n  }\n\n  if(needs_image){\n      // Set image url\n      image_url = \"/images/monsters/img/\" + monster_page_data.monster_key + \".gif\"\n      let image_placeholder = \"https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg\"\n\n      monster_image = <img className={monsterPageStyles.monsterImage}   src={image_url}\n      alt={monster_page_data.monster_data.title} \n      title={monster_page_data.monster_data.title} \n      onError={({currentTarget}) => {\n          currentTarget.onerror = null;\n          currentTarget.alt = \"This monster is missing it's image. It will be found eventually.\";\n          currentTarget.src = image_placeholder;\n          currentTarget.title = \"Missing image of \" + monster_page_data.monster_data.title;\n      }}/>\n\n  } \n    \n  // Change document title to monster title\n  if(typeof document !== 'undefined'){\n      document.title = monster_page_data.monster_data.title + \" - Complete Compendium\";\n  }\n\n  // Handle setting and accent color.\n  const setting_name = monster_page_data.monster_data.setting;\n  const setting_acr = cat_acronyms[setting_name]\n  var hrClass = \"hr2\"\n  var titleStyle = {}\n  if(setting_acr){\n      hrClass = \"hr2-\" + setting_acr\n      const colorVar = \"--color-\" + setting_acr\n      titleStyle = {color: COLORS.get(setting_acr)}\n  }\n\n  \n  let monsterNavWidgets: JSX.Element = <div>\n  <div className={monsterPageStyles.monsterNavLinks}>\n    <Link className={monsterPageStyles.monsterNavLink} to={\"../\" + previous_monster_key}>\n      <div className={monsterPageStyles.monsterNav}>\n          Previous\n      </div>\n    </Link>\n    {/* Random Monster */}\n    {/* <div className={monsterPageStyles.monsterNav}>\n        <RandomMonsterButton />\n    </div> */}\n    <div className={monsterPageStyles.pageRandomMonsterButton}>\n      <RandomMonsterButton />\n    </div>\n    <Link className={monsterPageStyles.monsterNavLink} to={\"../\" + next_monster_key}>\n      <div className={monsterPageStyles.monsterNav}>\n        Next\n      </div>\n    </Link>\n  </div>\n</div>\n  if(screenSize.width < 420){\n    monsterNavWidgets = <div>\n                          <div className={monsterPageStyles.monsterNavLinks}>\n                            <div className={monsterPageStyles.pageRandomMonsterButton}>\n                              <RandomMonsterButton />\n                            </div>\n                            <div className={monsterPageStyles.horizontalMonsterLinks}>\n                              <Link className={monsterPageStyles.monsterNavLink} to={\"../\" + previous_monster_key}>\n                                <div className={monsterPageStyles.monsterNav}>\n                                    Previous\n                                </div>\n                              </Link>\n                              {/* Random Monster */}\n                              {/* <div className={monsterPageStyles.monsterNav}>\n                                  <RandomMonsterButton />\n                                </div> */}\n                              <Link className={monsterPageStyles.monsterNavLink} to={\"../\" + next_monster_key}>\n                                <div className={monsterPageStyles.monsterNav}>\n                                  Next\n                                </div>\n                              </Link>\n                            </div>\n                          </div>\n                        </div>\n  } else {\n    monsterNavWidgets = <div>\n                          <div className={monsterPageStyles.monsterNavLinks}>\n                            <Link className={monsterPageStyles.monsterNavLink} to={\"../\" + previous_monster_key}>\n                              <div className={monsterPageStyles.monsterNav}>\n                                  Previous\n                              </div>\n                            </Link>\n                            {/* Random Monster */}\n                            {/* <div className={monsterPageStyles.monsterNav}>\n                                <RandomMonsterButton />\n                            </div> */}\n                            <div className={monsterPageStyles.pageRandomMonsterButton}>\n                              <RandomMonsterButton />\n                            </div>\n                            <Link className={monsterPageStyles.monsterNavLink} to={\"../\" + next_monster_key}>\n                              <div className={monsterPageStyles.monsterNav}>\n                                Next\n                              </div>\n                            </Link>\n                          </div>\n                        </div>\n  }\n\n\n  // Title style\n\n  const fullBody = monster_page_data.monster_data.fullBody;\n  const interweaveMonsterBody: JSX.Element = <div className=\"set-html\" dangerouslySetInnerHTML={{__html: fullBody}} />\n\n  if(monster_key == \"horax\"){\n    console.log(\"booktemplate monster, HORAX\")\n    console.log(\"prev\", previous_monster_key)\n    console.log(\"next\", next_monster_key)\n  }\n\n  // const { book_data } = data\n  return (\n    <Layout url={`/catalog/${catelog_setting}/${catelog_book}/${monster_key}`}>\n      <div>\n        {monsterNavWidgets}\n\n      {/* TITLE */}\n      <div className={monsterPageStyles.topHeader}>\n          <h1 style={titleStyle}>{monster_page_data.monster_data.title}</h1>\n          <Link to={\"/catalog/\" + cat_acronyms[monster_page_data.monster_data.setting]}>\n              <img className={monsterPageStyles.settingImage} src={`/img_settings/${cat_acronyms[monster_page_data.monster_data.setting]}.gif`}  alt={monster_page_data.monster_data.setting + \"Campaign Setting Logo\"} title={monster_page_data.monster_data.setting}/>\n          </Link>\n      </div>\n      \n      <hr className ={hrClass}/>\n      <hr className ={monsterPageStyles.hr1}/>\n\n      <div className={monsterPageStyles.monsterImgFrame}>\n      {monster_image}\n      </div>\n\n      {/* <Interweave className=\"interweave\" content={fullBody} /> */}\n      {interweaveMonsterBody}\n\n      {/* TSR Array */}\n      <div className={monsterPageStyles.sourceList}>\n        <div className={monsterPageStyles.tsrLabel}>\n            Sourcebooks:\n        </div>\n        <div className={monsterPageStyles.tsr}>\n            {\n                (monster_page_data.monster_data.hasOwnProperty(\"TSR\") && monster_page_data.monster_data[\"TSR\"] != null) ?\n                    monster_page_data.monster_data[\"TSR\"].map((tsr: string) => {\n                        return (\n                            <div key={tsr}>\n                                <Link to={\"/catalog/\" + cat_acronyms[monster_page_data.monster_data.setting] + \"/\" + tsr}>{sorted_tsr[tsr]} ({tsr})</Link>\n                                <br/>\n                            </div>\n                        )\n                    }\n                )\n                : \"No TSR\"\n            }\n        </div>\n    </div>\n\n    {/* LAST MODIFIED */}\n    {/* <div className=\"last-modified\">\n        Last Modified: {monster_page_data.updatedAt}\n    </div> */}\n\n\n\n\n      </div>\n    </Layout>\n  )\n}\n\nexport default BookMonsterTemplate","// extracted by mini-css-extract-plugin\nexport var RandomMonsterButton = \"monsterpage-module--RandomMonsterButton--65e5f\";\nexport var StatblockImage = \"monsterpage-module--Statblock-Image--5cd11\";\nexport var bk = \"monsterpage-module--bk--0c7e9\";\nexport var bodyBlocks = \"monsterpage-module--body-blocks--a22b5\";\nexport var cn = \"monsterpage-module--cn--2c6ef\";\nexport var f = \"monsterpage-module--f--f6dca\";\nexport var fi = \"monsterpage-module--fi--5f664\";\nexport var horizontalMonsterLinks = \"monsterpage-module--horizontal-monster-links--21e47\";\nexport var hr1 = \"monsterpage-module--hr1--f5b5c\";\nexport var interweave = \"monsterpage-module--interweave--f54cc\";\nexport var ip = \"monsterpage-module--ip--d7cfc\";\nexport var lastModified = \"monsterpage-module--last-modified--850e5\";\nexport var loading = \"monsterpage-module--loading--0674d\";\nexport var monsterBody = \"monsterpage-module--monster-body--65cac\";\nexport var monsterImage = \"monsterpage-module--monster-image--bb97d\";\nexport var monsterImgFrame = \"monsterpage-module--monster-img-frame--67133\";\nexport var monsterNav = \"monsterpage-module--monster-nav--3c352\";\nexport var monsterNavLink = \"monsterpage-module--monster-nav-link--495ca\";\nexport var monsterNavLinks = \"monsterpage-module--monster-nav-links--c9a5a\";\nexport var ni = \"monsterpage-module--ni--d20dd\";\nexport var pageRandomMonsterButton = \"monsterpage-module--page-random-monster-button--2d0e4\";\nexport var psionicTableData = \"monsterpage-module--psionic-table-data--bec3c\";\nexport var psionicsSummary = \"monsterpage-module--psionics-summary--e13ca\";\nexport var psionicsTable = \"monsterpage-module--psionics-table--3af5a\";\nexport var settingImage = \"monsterpage-module--setting-image--e8b92\";\nexport var sourceList = \"monsterpage-module--source-list--66a63\";\nexport var statblock = \"monsterpage-module--statblock--52b79\";\nexport var topHeader = \"monsterpage-module--top-header--5efbc\";\nexport var tsr = \"monsterpage-module--tsr--2eb82\";\nexport var tsrFooter = \"monsterpage-module--tsr-footer--866d8\";\nexport var tsrLabel = \"monsterpage-module--tsr-label--b394a\";"],"names":["Acronyms","require","KeyToTitles","BooksIDToTitles","props","builtBC","path","path_count","text","path_origin","forEach","node","push","React","className","key","Link","to","relative_locs","url","split","length","shift","Navbar","BreadCrumb","children","Footer","RandomMonsterButton","monster_key","setMonsterKey","useState","getRandomMonster","monsterKeys","Object","keys","AA_KEYS_TITLES","undefined","random_key","max","Math","floor","random","useEffect","onClick","COLORS","Map","isBrowser","window","cat_acronyms","sorted_tsr","_ref","pageContext","screenSize","setScreenSize","getCurrentDimension","width","global","innerWidth","height","innerHeight","updateDimension","addEventListener","removeEventListener","monster_page_data","previous_monster_key","title","sources","prev_key","next_monster_key","next_key","catelog_book","catelog_setting","monster_image","needs_image","image_url","monster_data","images","match","RegExp","image_placeholder","monsterPageStyles","src","alt","onError","_ref2","currentTarget","onerror","document","setting_name","setting","setting_acr","hrClass","titleStyle","color","get","monsterNavWidgets","fullBody","interweaveMonsterBody","dangerouslySetInnerHTML","__html","console","log","Layout","style","hasOwnProperty","map","tsr","horizontalMonsterLinks","hr1","monsterImage","monsterImgFrame","monsterNav","monsterNavLink","monsterNavLinks","pageRandomMonsterButton","settingImage","sourceList","topHeader","tsrLabel"],"sourceRoot":""}