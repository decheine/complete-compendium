{"version":3,"file":"component---src-templates-bookmonster-tsx-a4f5d89b4bd3e60e7a86.js","mappings":"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","sources":["webpack://complete-compendium/./src/templates/bookmonster.tsx","webpack://complete-compendium/./src/styles/modules/monsterpage.module.css","webpack://complete-compendium/./src/components/RandomMonsterButton.tsx","webpack://complete-compendium/./src/components/BreadCrumb.tsx","webpack://complete-compendium/./src/styles/modules/breadcrumb.module.css","webpack://complete-compendium/./src/components/Layout.tsx","webpack://complete-compendium/./src/styles/modules/layout.module.css"],"sourcesContent":["import React from \"react\"\nimport Layout from '../components/Layout';\nimport {  PageProps, Link, graphql, HeadFC  } from \"gatsby\";\n\nimport { CreatePagesArgs } from 'gatsby';\nimport { Interweave } from \"interweave\";\n\n// Formatting\nimport \"@styles/SettingColors.css\"\nimport COLORS from '@styles/SettingColors'\nimport RandomMonsterButton from \"@components/RandomMonsterButton\";\n\nimport * as monsterPageStyles from \"@styles/modules/monsterpage.module.css\"\n\nimport { polyfill } from 'interweave-ssr';\n\npolyfill();\n// export default function Container({ children }) {\n//   return <div className={containerStyles.container}>{children}</div>\n// }\n// const isBrowser = typeof window !== \"undefined\"\n\nconst cat_acronyms = require('@data/CatAcronyms.json')\n// const sorted_tsr = require('@data/sortedtsr.json')\nconst all_tsr = require('../../data/all_tsr.json')\nconst publishId_to_acronym = require('@data/publishId_to_acronym.json')\n///////////\n// Styles\n\nconst settingImageStyle = {\n  float: \"right\",\n  width: \"150px\",\n}\n\nconst headingStyles = {\n  marginTop: 0,\n  marginBottom: 64,\n  maxWidth: 320,\n}\n\ntype MonsterDataType = {\n    TSR: string[],\n    fullBody: string,\n    images: string[],\n    setting: string,\n    statblock: Object,\n    title: string\n}\n\ntype MonsterPageContext = {\n    monster_key: string\n    monster_data: MonsterDataType\n    sources: string[]\n    statblock_names: string[]\n    title: string\n    prev_key: string\n    next_key: string\n    catelog_book: string\n    catelog_setting: string\n    monster_path: string\n}\n\n\ntype MonsterDataWrapper = {\n    monster_page: MonsterPageContext\n    // workaround syntax warning fix,\n    // the following aren't used in reality, only\n    // monster_page\n    monster_key: string\n    monster_data: MonsterDataType\n    sources: string[]\n    statblock_names: string[]\n    title: string\n    prev_key: string\n    next_key: string\n    catelog_book: string\n    catelog_setting: string\n    \n}\n\ninterface Props {\n  pageContext: MonsterPageContext\n  }\n\nconst BookMonsterTemplate: React.FC<Props> = ({pageContext }) => {\n//   const [screenSize, setScreenSize] = useState(getCurrentDimension());\n\n//   function getCurrentDimension(){\n//     if(isBrowser){\n\n//       return {\n//         width: global.window.innerWidth,\n//       \theight: global.window.innerHeight\n//       }\n//     } else {\n//       return {\n//         width: 0,\n//         height: 0,\n//       }\n//     }\n// }\n\n//   useEffect(() => {\n//     const updateDimension = () => {\n//       setScreenSize(getCurrentDimension())\n//     }\n//     if(isBrowser)\n//       global.window.addEventListener('resize', updateDimension);\n    \n//     return(() => {\n//         global.window.removeEventListener('resize', updateDimension);\n//     })\n//   }, [screenSize])\n\n  const monster_page_data: MonsterPageContext = pageContext\n  // const monster_object = pageContext.monster_object\n//   console.log(\"monster page\")\n//   console.log(monster_page_data)\n  // console.log(\"monster template\")\n  // console.log(monster_object)\n  const monster_key = monster_page_data.monster_key\n  const title = monster_page_data.title\n  const sources = monster_page_data.sources\n  const previous_monster_key = (typeof monster_page_data.prev_key !== \"undefined\") ? monster_page_data.prev_key : monster_key; \n  const next_monster_key = (typeof monster_page_data.next_key !== \"undefined\") ? monster_page_data.next_key : monster_key;  \n  const catelog_book = monster_page_data.catelog_book\n  const catelog_setting = monster_page_data.catelog_setting\n//   console.log(previous_monster_key, next_monster_key)\n  // Checking Main Image\n  //  If the regex pattern matches, know we NEED an image. So set the url to where it should be with monster_key\n  //  and also have an onerror=\"javascript:this.src='images/default.jpg'\" to set the image to default if it doesn't exist\n  //  If doesn't need image, set the bool flag and no image will be rendered\n  let monster_image = <></>;\n  let needs_image = true;\n  let image_url = \"\";\n  // if(monster_page_data.monster_data.images[1]) regex contains monster_key\n  let main_img_pattern = \"img/\" + monster_page_data.monster_key\n  if(monster_page_data.monster_data.images[1] && monster_page_data.monster_data.images[1].match(new RegExp(main_img_pattern, \"g\"))){\n      // console.log(\"Should have image\")\n      needs_image = true;\n  } else {\n      // console.log(\"Does not have image\")\n      needs_image = false;\n  }\n\n  if(needs_image){\n      // Set image url\n      image_url = \"/images/monsters/img/\" + monster_page_data.monster_key + \".gif\"\n      let image_placeholder = \"https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg\"\n\n      monster_image = <img className={monsterPageStyles.monsterImage}   src={image_url}\n      alt={monster_page_data.monster_data.title} \n      title={monster_page_data.monster_data.title} \n      onError={({currentTarget}) => {\n          currentTarget.onerror = null;\n          currentTarget.alt = \"This monster is missing it's image. It will be found eventually.\";\n          currentTarget.src = image_placeholder;\n          currentTarget.title = \"Missing image of \" + monster_page_data.monster_data.title;\n      }}/>\n\n  } \n    \n  // Change document title to monster title\n  // if(typeof document !== 'undefined'){\n  //     document.title = monster_page_data.monster_data.title + \" - Complete Compendium\";\n  // }\n\n  // Handle setting and accent color.\n  const setting_name = monster_page_data.monster_data.setting;\n  const setting_acr = cat_acronyms[setting_name]\n  var hrClass = \"hr2\"\n  var titleStyle = {}\n  if(setting_acr){\n      hrClass = \"hr2-\" + setting_acr\n      const colorVar = \"--color-\" + setting_acr\n      titleStyle = {color: COLORS.get(setting_acr)}\n  }\n\n  \n  let monsterNavWidgets: JSX.Element = <div>\n  <div className={monsterPageStyles.monsterNavLinks}>\n    <div className={monsterPageStyles.pageRandomMonsterButton}>\n      <RandomMonsterButton home={false} />\n    </div>\n    <div className={monsterPageStyles.horizontalMonsterLinks}>\n      <Link className={monsterPageStyles.monsterNavLink} to={\"../\" + previous_monster_key}>\n        <div className={monsterPageStyles.monsterNav}>\n            Previous\n        </div>\n      </Link>\n      {/* Random Monster */}\n      {/* <div className={monsterPageStyles.monsterNav}>\n          <RandomMonsterButton />\n        </div> */}\n      <Link className={monsterPageStyles.monsterNavLink} to={\"../\" + next_monster_key}>\n        <div className={monsterPageStyles.monsterNav}>\n          Next\n        </div>\n      </Link>\n    </div>\n  </div>\n</div>\n\n  // Title style\n\n  \n  if(monster_key == \"horax\"){\n    console.log(\"booktemplate monster, HORAX\")\n    console.log(\"prev\", previous_monster_key)\n    console.log(\"next\", next_monster_key)\n  }\n  const fullBody = monster_page_data.monster_data.fullBody;\n  const interweaveMonsterBody: JSX.Element = <div className=\"set-html\" dangerouslySetInnerHTML={{__html: fullBody}} />\n\n  // const { book_data } = data\n  return (\n    <Layout url={`/catalog/${catelog_setting}/${catelog_book}/${monster_key}`}>\n      <div>\n        {monsterNavWidgets}\n\n      {/* TITLE */}\n      <div className={monsterPageStyles.topHeader}>\n          <h1 style={titleStyle}>{monster_page_data.monster_data.title}</h1>\n          <Link to={\"/catalog/\" + cat_acronyms[monster_page_data.monster_data.setting]}>\n              <img className={monsterPageStyles.settingImage} src={`/img_settings/${cat_acronyms[monster_page_data.monster_data.setting]}.gif`}  alt={monster_page_data.monster_data.setting + \"Campaign Setting Logo\"} title={monster_page_data.monster_data.setting}/>\n          </Link>\n      </div>\n      \n      <hr className ={hrClass}/>\n      <hr className ={monsterPageStyles.hr1}/>\n\n      <div className={monsterPageStyles.monsterImgFrame}>\n      {monster_image}\n      </div>\n\n      <Interweave className=\"interweave\" content={fullBody} />\n      {/* {interweaveMonsterBody} */}\n\n      {/* TSR Array */}\n      <div className={monsterPageStyles.sourceList}>\n        <div className={monsterPageStyles.tsrLabel}>\n            Sourcebooks:\n        </div>\n        <div className={monsterPageStyles.tsr}>\n            {\n                (monster_page_data.monster_data.hasOwnProperty(\"TSR\") && monster_page_data.monster_data[\"TSR\"] != null) ?\n                    monster_page_data.monster_data[\"TSR\"].map((tsr: string) => {\n                        return (\n                            <div key={tsr}>\n                                <Link to={\"/catalog/\" + publishId_to_acronym[tsr] + \"/\" + tsr}>{all_tsr[tsr]?.title} ({tsr})</Link>\n                                <br/>\n                            </div>\n                        )\n                    }\n                )\n                : \"No TSR\"\n            }\n        </div>\n    </div>\n\n    {/* LAST MODIFIED */}\n    {/* <div className=\"last-modified\">\n        Last Modified: {monster_page_data.updatedAt}\n    </div> */}\n    <div className={monsterPageStyles.printLink}>\n      <Link to={`/appendix/${monster_key}/print`}>Print-friendly page</Link> (Experimental)\n    </div>\n\n\n\n      </div>\n    </Layout>\n  )\n}\n\nexport const Head: React.FC<Props> = ({ pageContext }) => (\n  <>\n    <title>{pageContext.title + \" - AD&D Complete Compendium\"}</title>\n    <meta property=\"og:site_name\" content=\"AD&D 2nd Edition Complete Monstrous Compendium\"/>\n    <meta property=\"og:title\" content={pageContext.monster_data.title  + \" | AD&D Complete Compendium\"}/>\n    <meta property=\"og:url\" content={\"https://www.completecompendium.com\" + pageContext.monster_path}/>\n    <meta property=\"og:type\" content=\"website\"/>\n    {\n      pageContext.monster_data.images[1] && pageContext.monster_data.images[1].match(new RegExp(pageContext.monster_key, \"g\")) ?\n      <>\n      <meta property=\"og:image\" content={\"https://www.completecompendium.com/images/monsters/img/\" + pageContext.monster_key + \".gif\"}/>\n      <meta name=\"twitter:image\" content={\"https://www.completecompendium.com/images/monsters/img/\" + pageContext.monster_key + \".gif\"}/>\n    </>\n      :\n      <></>\n    }\n    <meta property=\"og:image:width\" content=\"300\"/>\n    <meta property=\"og:image:height\" content=\"360\"/>\n    \n          \n    {/* <meta name=\"description\" content={ getMonsterDescription(pageContext.monster_key ,pageContext.monster_data.fullBody) } /> */}\n    {/* Image: \"/images/monsters/img/\" + monster_page_data.monster_key + \".gif\" */}\n    <meta name=\"twitter:card\" content=\"summary_large_image\"/>\n    <meta name=\"twitter:url\" content={\"https://www.completecompendium.com\" + pageContext.monster_path} />\n    <meta name=\"twitter:title\" content=\"Advanced Dungeons & Dragons 2nd Edition Complete Compendium\" />\n        \n  </>\n)\n\n\nexport default BookMonsterTemplate","// extracted by mini-css-extract-plugin\nexport var RandomMonsterButton = \"monsterpage-module--RandomMonsterButton--65e5f\";\nexport var StatblockImage = \"monsterpage-module--Statblock-Image--5cd11\";\nexport var bk = \"monsterpage-module--bk--0c7e9\";\nexport var bodyBlocks = \"monsterpage-module--body-blocks--a22b5\";\nexport var cn = \"monsterpage-module--cn--2c6ef\";\nexport var f = \"monsterpage-module--f--f6dca\";\nexport var fi = \"monsterpage-module--fi--5f664\";\nexport var horizontalMonsterLinks = \"monsterpage-module--horizontal-monster-links--21e47\";\nexport var hr1 = \"monsterpage-module--hr1--f5b5c\";\nexport var interweave = \"monsterpage-module--interweave--f54cc\";\nexport var ip = \"monsterpage-module--ip--d7cfc\";\nexport var lastModified = \"monsterpage-module--last-modified--850e5\";\nexport var loading = \"monsterpage-module--loading--0674d\";\nexport var monsterBody = \"monsterpage-module--monster-body--65cac\";\nexport var monsterImage = \"monsterpage-module--monster-image--bb97d\";\nexport var monsterImgFrame = \"monsterpage-module--monster-img-frame--67133\";\nexport var monsterNav = \"monsterpage-module--monster-nav--3c352\";\nexport var monsterNavLink = \"monsterpage-module--monster-nav-link--495ca\";\nexport var monsterNavLinks = \"monsterpage-module--monster-nav-links--c9a5a\";\nexport var ni = \"monsterpage-module--ni--d20dd\";\nexport var pageRandomMonsterButton = \"monsterpage-module--page-random-monster-button--2d0e4\";\nexport var printLink = \"monsterpage-module--print-link--bc6b6\";\nexport var psionicTableData = \"monsterpage-module--psionic-table-data--bec3c\";\nexport var psionicsSummary = \"monsterpage-module--psionics-summary--e13ca\";\nexport var psionicsTable = \"monsterpage-module--psionics-table--3af5a\";\nexport var settingImage = \"monsterpage-module--setting-image--e8b92\";\nexport var sourceList = \"monsterpage-module--source-list--66a63\";\nexport var statblock = \"monsterpage-module--statblock--52b79\";\nexport var topHeader = \"monsterpage-module--top-header--5efbc\";\nexport var tsr = \"monsterpage-module--tsr--2eb82\";\nexport var tsrFooter = \"monsterpage-module--tsr-footer--866d8\";\nexport var tsrLabel = \"monsterpage-module--tsr-label--b394a\";","// Random monster button.\nimport React from \"react\"\nimport { useState, useEffect } from 'react';\nimport CSS from 'csstype';\nimport { Link } from \"gatsby\";\n\nimport AA_KEYS_TITLES from '../data/AA_KEYS_TITLES.json'\n\nfunction getRandomInt(max: number) {\n    return Math.floor(Math.random() * max);\n}\n\nconst randomButtonStyleHome: CSS.Properties = {\n    marginBlockStart: \"unset\",\n    marginBlockEnd: \"unset\",\n    marginInlineStart: \"unset\",\n    marginInlineEnd: \"unset\",\n    position: \"relative\",\n    fontFamily: \"Leksa Sans DemiBold\",\n    fontStyle: \"normal\",\n    fontWeight: 600,\n    fontSize: \"24px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    textDecoration: \"none\",\n    textTransform: \"capitalize\",\n    color: \"white\",\n    paddingTop: \"1rem\",\n    paddingBottom: \"1rem\",\n    paddingLeft: \"2rem\",\n    paddingRight: \"2rem\",\n    zIndex: 1,\n}\n\nconst randomButtonStylePage: CSS.Properties = {\n    marginBlockStart: \"unset\",\n    marginBlockEnd: \"unset\",\n    marginInlineStart: \"unset\",\n    marginInlineEnd: \"unset\",\n    position: \"relative\",\n    fontFamily: \"Leksa Sans DemiBold\",\n    fontStyle: \"normal\",\n    fontWeight: 600,\n    fontSize: \"18px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    textDecoration: \"none\",\n    textTransform: \"capitalize\",\n    color: \"white\",\n    zIndex: 1,\n}\n\nconst randomButtonStyleInner: CSS.Properties = {\n    position: \"relative\",\n    fontFamily: \"Leksa Sans DemiBold\",\n    fontStyle: \"normal\",\n    fontWeight: 400,\n    display: \"flex\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    textDecoration: \"none\",\n    textTransform: \"capitalize\",\n    color: \"white\",\n    paddingTop: \"2mm\",\n    paddingBottom: \"2mm\",\n    paddingLeft: \"1.5rem\",\n    paddingRight: \"1.5rem\",\n    zIndex: 1,\n}\n\n\nconst RandomMonsterButton = (props: { home: Boolean }) => {\n    const [monster_key, setMonsterKey] = useState('');\n    // const [monster_title, setMonsterTitle] = useState('');\n\n    const getRandomMonster = () => {\n        // if DataService.monsterTitles is undefined\n        const monsterKeys = Object.keys(AA_KEYS_TITLES);\n        //console.log(\"Random. localmonsterkeys\",monsterKeys  )\n        if (monsterKeys !== undefined) {\n\n            const random_key = monsterKeys[getRandomInt(monsterKeys.length)];\n            setMonsterKey(random_key);\n        }\n    }\n\n    useEffect(() => {\n        getRandomMonster();\n    }, []);\n    let randomButtonStyle: CSS.Properties\n    if (props.home) {\n        randomButtonStyle = randomButtonStyleHome\n    } else {\n        randomButtonStyle = randomButtonStylePage\n    }\n\n    return (\n        <div style={randomButtonStyle}>\n            <Link to={\"/appendix/\" + monster_key} style={{ textDecoration: \"none\" }}>\n                <div style={randomButtonStyleInner} onClick={getRandomMonster}>Random Monster</div>\n                {/* <div className=\"random-button\" onClick={getRandomMonster}>Random Monster</div> */}\n            </Link>\n        </div>\n    );\n}\n\nexport default RandomMonsterButton;","import React from \"react\"\nimport { Link } from \"gatsby\"\n\n/**\n * Breadcrum react component that displays the current page's breadcrumb\n * Showing Catalog > Setting > Book\n */\n\n// Breadcrum react component that displays the current page's breadcrumb showing Catalog > Setting > Book\nimport * as breadcrumbStyle from \"@styles/modules/breadcrumb.module.css\"\n\n// import { title } from 'process';\nconst Acronyms = require('@data/AcronymsSetting.json')\nconst KeyToTitles = require('@data/AA_KEYS_TITLES.json')\n// const BooksIDToTitles = require('@data/sortedtsr.json')\nconst BOOKS = require('../../data/all_tsr.json')\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { library, dom } from '@fortawesome/fontawesome-svg-core'\nimport {\n    faCoffee,\n    faAddressBook,\n    faAirFreshener,\n    faAmbulance,\n    faAtom,\n    faBus,\n    faCoins,\n    faDice,\n    faAngleRight\n  } from '@fortawesome/free-solid-svg-icons'\n// class BreadCrumbElement extends React.Component {\n\nfunction BreadCrumbElement (props: {link: string, text: string}) {\n    return (\n        <>\n        <Link to={props.link} className='bc-element'>\n            {\n            props.text\n           }\n        </Link>\n        </>\n    )\n}\n\n// Specify types for Props and State\ntype MyProps = {\n    path: string[]\n}\n\n\n\n// 👇️ we set the props to empty object, and set the state to {value: string}\nconst BreadCrumb = ( props: MyProps) => {\n    var builtBC: any = [];\n    var path = \"\"\n    var path_count = 0;\n    var text = \"\"\n\n    // console.log(\"breadcrumb\", props)\n    \n    var path_origin = props.path[0]\n\n    props.path.forEach(node => {\n\n        switch (path_origin){\n            case \"appendix\":\n                switch (path_count) {\n                    case 0:\n                        text = node\n                        break;\n                    case 1: // Monster title\n                        text = KeyToTitles[node]\n                        break;\n                    default:\n                        text = \"APendix\"\n                }\n                break;\n            case \"catalog\":\n                switch(path_count) {\n                    case 0: // Catalog\n                        text = node\n                        break;\n                    case 1: // Setting\n                        text = Acronyms[node]\n                        break;\n                    case 2: // Book\n                        text = BOOKS[node].title\n                        break;\n                    case 3: // Monster\n                        text = KeyToTitles[node]\n                        break;\n                    default:\n                        text= \"Catalog\"\n                }\n\n                break;\n            case \"about\":\n                switch(path_count){\n                    case 0:\n                        text = node\n                        break;\n                    case 1:\n                        if(node == \"the-monsters\"){\n                            text = \"The Monsters\"\n                        } else{\n                            text = node\n                        }\n                        break;\n                    default:\n                        text = \"About\"\n                }\n\n            case \"table\":\n                text = \"Table\"\n                \n                \n        }\n\n        path += `/${node}`\n\n        if(path_count != 0){\n            builtBC.push(\n                <div className={breadcrumbStyle.arrowBox} key={`arrow-${node}`}>\n                    /\n                    {/* <FontAwesomeIcon icon={faAngleRight} className={breadcrumbStyle.rightArrow} /> */}\n                </div>\n            )\n        }\n        builtBC.push(\n        \n            // <div className={breadcrumbStyle.breadcrumb} key={node}>\n                <Link className={breadcrumbStyle.bcElement} to={path} key={node}>{text} </Link>\n            )\n        // builtBC.push(\n        //     <FontAwesomeIcon icon=\"angle-right\" className='right-arrow' />\n        // )\n        path_count++\n    }\n    )\n    // <div className={breadcrumbStyle.bcElement}>{x}</>\n\n\n\n    return (\n        <div className={breadcrumbStyle.bcFrame}>\n            {/* {props.path} */}\n            {/* <div className={breadcrumbStyle.startCap}/> */}\n            {builtBC}\n            <div className={breadcrumbStyle.bcBg}/>\n        </div>\n    )\n}\n\nexport default BreadCrumb;\n\n","// extracted by mini-css-extract-plugin\nexport var arrowBox = \"breadcrumb-module--arrow-box--8f143\";\nexport var bcBg = \"breadcrumb-module--bc-bg--8b107\";\nexport var bcCatalog = \"breadcrumb-module--bc-catalog--653f8\";\nexport var bcElement = \"breadcrumb-module--bc-element--36f40\";\nexport var bcFrame = \"breadcrumb-module--bc-frame--78140\";\nexport var breadcrumb = \"breadcrumb-module--breadcrumb--8d16f\";\nexport var rightArrow = \"breadcrumb-module--right-arrow--1e6a3\";\nexport var startCap = \"breadcrumb-module--start-cap--ca81e\";","import React from \"react\"\nimport { PropsWithChildren } from 'react'\n\nimport Navbar from \"./Navbar\";\nimport BreadCrumb from \"./BreadCrumb\";\n// import './Layout.css'\nimport * as layoutStyle from '@styles/modules/layout.module.css'\n\nimport Footer from \"./Footer\";\n/**\n * \n * @param param0 \n * @returns \n * \n * \n * \n * \n */\n\ntype LayoutProps = {\n  url: string\n}\n\n\n\nconst Layout = (props: PropsWithChildren<LayoutProps>) => {\n    // const url = typeof window !== 'undefined' ? window.location.pathname : '';\n    // split path\n    const relative_locs = props.url.split(\"/\")\n    // console.log(\"Layout props\",props, relative_locs)\n    if(relative_locs.length < 3){\n      relative_locs.shift();\n      \n    } else {\n      // relative_locs.pop();\n      relative_locs.shift();\n    }\n    console.log(relative_locs)\n    // console.log(relative_locs)\n    return (\n      <div className={layoutStyle.layoutWrapper}>\n        <Navbar/>\n        <div className={layoutStyle.layout}>\n        <BreadCrumb path={relative_locs}/>\n          {/* {pathname !== \"/\" ? <BreadCrumb title={breadCrumbs[1]} setting={breadCrumbs[2]} book={breadCrumbs[3]} monster_key={breadCrumbs[4]}/> : null} */}\n          {props.children}\n        </div>\n        <Footer/>\n      </div>\n    );\n};\n\n\n\n  export default Layout","// extracted by mini-css-extract-plugin\nexport var layout = \"layout-module--layout--d56eb\";\nexport var layoutMain = \"layout-module--layout-main--c275b\";\nexport var layoutWrapper = \"layout-module--layout-wrapper--c2f92\";"],"names":["polyfill","cat_acronyms","require","all_tsr","publishId_to_acronym","Head","_ref3","pageContext","React","title","property","content","monster_data","monster_path","images","match","RegExp","monster_key","name","_ref","monster_page_data","previous_monster_key","sources","prev_key","next_monster_key","next_key","catelog_book","catelog_setting","monster_image","needs_image","image_url","main_img_pattern","image_placeholder","className","monsterPageStyles","src","alt","onError","_ref2","currentTarget","onerror","setting_name","setting","setting_acr","hrClass","titleStyle","color","COLORS","get","monsterNavWidgets","RandomMonsterButton","home","Link","to","console","log","fullBody","Layout","url","style","Interweave","hasOwnProperty","map","tsr","_all_tsr$tsr","key","horizontalMonsterLinks","hr1","monsterImage","monsterImgFrame","monsterNav","monsterNavLink","monsterNavLinks","pageRandomMonsterButton","printLink","settingImage","sourceList","topHeader","tsrLabel","randomButtonStyleHome","marginBlockStart","marginBlockEnd","marginInlineStart","marginInlineEnd","position","fontFamily","fontStyle","fontWeight","fontSize","display","alignItems","textAlign","textDecoration","textTransform","paddingTop","paddingBottom","paddingLeft","paddingRight","zIndex","randomButtonStylePage","randomButtonStyleInner","props","setMonsterKey","useState","getRandomMonster","monsterKeys","Object","keys","AA_KEYS_TITLES","undefined","random_key","max","length","Math","floor","random","randomButtonStyle","useEffect","onClick","Acronyms","KeyToTitles","BOOKS","builtBC","path","path_count","text","path_origin","forEach","node","push","relative_locs","split","shift","Navbar","BreadCrumb","children","Footer"],"sourceRoot":""}