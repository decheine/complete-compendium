{"version":3,"file":"component---src-pages-catalog-tsx-22646f17598b36499cdd.js","mappings":"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","sources":["webpack://complete-compendium/./src/components/CategoriesList.tsx","webpack://complete-compendium/./src/components/AllBooksList.tsx","webpack://complete-compendium/./src/styles/modules/catalog.module.css","webpack://complete-compendium/./src/pages/catalog.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n// REFACTOR THIS To instead call API to get the data it needs\n// and then build the result.\n\nimport './CategoriesList.css'\nimport { Link } from \"gatsby\";\n// import CatAcronyms from '../../../data/CatAcronyms.json'\nconst ACRONYMS = require('../data/CatAcronyms.json')\nconst WORLDS = require('../data/CatWorlds.json')\n// import { Router, Switch, Route } from 'react-router';\n\n// import { SettingPage } from \"./SettingPage\";\n\nconst data_settings = require('../../data/settings.json')\nconst settings_list = require('@data/AcronymsSetting.json')\n\ntype SettingType = {\n    setting_key: string,\n    setting_name: string,\n    source_books: Array<string>,\n    createdAt: string,\n    updatedAt: string\n  }\n\nexport function CategoriesList(){\n    const [settings, setSettings] = useState(new Array<SettingType>())\n    const [settingNames, setNames] = useState(new Array<string>())\n    \n    // create a map from setting to book list from the global.settings\n\n    useEffect(() => {\n        const fetchData = async () => {\n            // get the data from the api\n            const dataSettings = data_settings\n        \n            var tmpNames = new Array<string>()\n            for(let i = 0; i < dataSettings.length; i++){\n                tmpNames.push(dataSettings[i].setting_name);\n            }\n\n            // set state with the result\n            setSettings(dataSettings)\n            setNames(tmpNames)\n        }\n        \n        // call the function\n        fetchData()\n        \n        \n    }, [])\n\n    let buffer: React.JSX.Element[] = []\n\n    Object.entries(settings_list).forEach(([key, value], index) => {\n        \n        // name Bobby Hadz 0\n        // country Chile 1\n        // console.log(key, value, index);\n        // console.log(`${key}: ${value}`);\n        if(typeof value !== 'string'){\n\n        } else {\n            buffer.push(\n                <div className={\"setting-frame\"} title={key} key={key}>\n                    <Link to={`/catalog/${key}`} className=\"category\">\n                        <div className=\"setting-button\">\n                            <img className=\"catImg\" src={'/images/grf/' +  key + '.gif'} alt={value + 'image'}></img>\n                            \n                            <div className=\"setting-subtitle\">\n                                <div className=\"setting-title\">{value}</div>\n                                <div className=\"setting-world\">{WORLDS[settings_list[key]]}</div>\n                            </div>\n                        </div>\n                    </Link>\n                </div>\n            )\n        }\n      });\n\n    \n    // console.log(\"settings: \", settings, settingNames)\n\n    return (\n        <>\n        \n        \n        <div className=\"CategoryList\">\n            {buffer}\n        </div>\n        \n        </>\n    )\n    \n}","import React from 'react'\nimport BookCard from './BookCard'\nimport { BookList } from '~/src/components/BookList';\nimport CSS from 'csstype';\nimport BookListView from '../components/BookListView';\n\n\n\n// const BOOKS = require('@data/sortedtsr.json')\nconst BOOKS = require('../../data/all_tsr.json')\nconst Categories = require('@data/Categories.json')\nconst CatAcronyms = require('@data/CatAcronyms.json')\nconst Full_Catalog = require('@data/Full_Catalog.json')\nconst SettingTitleToAcryonym =require('@data/SettingTitleToAcronym.json')\n\nconst bookListStyle: CSS.Properties = {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-evenly\"\n}\n\ntype Entries<T> = {\n    [K in keyof T]: [K, T[K]];\n}[keyof T][];\n\nconst getEntries = <T extends object>(obj: T) => Object.entries(obj) as Entries<T>;\n\ntype BookObjectType = {\n    author : string,\n    monster_keys : Array<string>,\n    publish_id : string,\n    setting : string,\n    title : string,\n    year : string\n }\n\n type BookListProps = {\n    id: string,\n    category: string,\n    title: string,\n    author: string,\n    book_object: BookObjectType\n}\n\nexport function AllBooksList() {\n\n    const items = []\n    // console.log(BOOKS)\n    // Iterate through all BOOKS and push a BookCard for each one\n    var books_setting: any = {}\n    for (const [index, value] of Object.entries(Categories)) {\n        for (const val of value as string[]) {\n            books_setting[val] = CatAcronyms[index]\n        }\n        // books_setting[value as string] = CatAcronyms[index]\n    }\n\n    for (const [index] of Object.entries(BOOKS)) {\n        // console.log(index, value)\n        items.push(<BookCard key={index} id={index} category={books_setting[index]} title={BOOKS[index as string].title} />)\n    }\n\n    const list_items = []\n\n    Full_Catalog.sort((a: BookObjectType, b: BookObjectType) => (a.publish_id < b.publish_id ? -1 : 1));\n    for (const [index, book_object] of Object.entries(Full_Catalog) as Entries<typeof Full_Catalog>) {\n\n        // var book_object = catalog_data.find((obj: { publish_id: number }) => {\n        //     return obj.publish_id === publish_id\n        // })\n        // console.log(index)\n        list_items.push(<BookListView key={book_object.publish_id} id={book_object.publish_id} category={SettingTitleToAcryonym[book_object.setting]} title={book_object.title} author={book_object?.author} book_object={book_object} />)\n    }\n    \n\n    return (\n        <div style={bookListStyle}>\n            {list_items}\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport var CatalogDescription = \"catalog-module--CatalogDescription--ab901\";\nexport var backgroundCatalog = \"catalog-module--background-catalog--03141\";\nexport var catalogTitle = \"catalog-module--catalog-title--8fbbd\";\nexport var h1 = \"catalog-module--h1--9995a\";","import React from 'react'\nimport Layout from '../components/Layout';\n\nimport { CategoriesList } from '../components/CategoriesList';\nimport { AllBooksList } from '../components/AllBooksList';\n\nimport * as catalogStyle from '@styles/modules/catalog.module.css'\nimport { HeadProps } from 'gatsby';\n\ntype DataProps = {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n}\n\nexport function catalog() {\n    if(typeof document !== 'undefined'){\n      document.title = \"Catalog - Complete Compendium\"\n    }\n    return (\n        // upper page with category links\n      <>\n      <Layout url='/catalog'>\n      {/* <NavBar/> */}\n        <div className='backgroundCatalog'>\n          <CategoriesList/>\n          {/* All Books */}\n          <h2 className='catalogTitle' id='settings'>All Campaign Settings</h2>\n          <div className={catalogStyle.CatalogDescription}>\n              Browse monster books by setting or browse all at once.\n          </div>\n          <h2 className={catalogStyle.catalogTitle} id='books'>All Books</h2>\n          <AllBooksList/>\n        </div>\n      </Layout>\n      </>\n      // lower page with all book list\n    );\n}\nexport default catalog;\n\nexport function Head(props: HeadProps<DataProps>) {\n  return (\n    <>\n    <title>Catalog - AD&D 2e Complete Compendium</title>\n    \n    </>\n  )\n}"],"names":["require","WORLDS","data_settings","settings_list","CategoriesList","settings","setSettings","useState","Array","settingNames","setNames","useEffect","async","dataSettings","tmpNames","i","length","push","setting_name","fetchData","buffer","Object","entries","forEach","_ref","index","key","value","React","className","title","Link","to","src","alt","BOOKS","Categories","CatAcronyms","Full_Catalog","SettingTitleToAcryonym","bookListStyle","display","flexWrap","justifyContent","AllBooksList","items","books_setting","val","BookCard","id","category","list_items","sort","a","b","publish_id","book_object","BookListView","setting","author","style","CatalogDescription","catalogTitle","catalog","document","Layout","url","catalogStyle","Head","props"],"sourceRoot":""}