{"version":3,"file":"component---src-templates-monster-tsx-95714dda4d806cd8b6c8.js","mappings":"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","sources":["webpack://complete-compendium/./node_modules/escape-html/index.js","webpack://complete-compendium/./src/components/BreadCrumb.tsx","webpack://complete-compendium/./src/styles/modules/breadcrumb.module.css","webpack://complete-compendium/./src/components/Layout.tsx","webpack://complete-compendium/./src/styles/modules/layout.module.css","webpack://complete-compendium/./src/components/RandomMonsterButton.tsx","webpack://complete-compendium/./src/styles/SettingColors.ts","webpack://complete-compendium/./node_modules/interweave/esm/bundle-7aab7250.js","webpack://complete-compendium/./node_modules/interweave/esm/index.js","webpack://complete-compendium/./src/components/regex_description.ts","webpack://complete-compendium/./src/templates/monster.tsx","webpack://complete-compendium/./src/styles/modules/monsterpage.module.css"],"sourcesContent":["/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = escapeHtml;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\n/**\n * Breadcrum react component that displays the current page's breadcrumb\n * Showing Catalog > Setting > Book\n */\n\n// Breadcrum react component that displays the current page's breadcrumb showing Catalog > Setting > Book\nimport * as breadcrumbStyle from \"@styles/modules/breadcrumb.module.css\"\n\n// import { title } from 'process';\nconst Acronyms = require('@data/AcronymsSetting.json')\nconst KeyToTitles = require('@data/AA_KEYS_TITLES.json')\nconst BooksIDToTitles = require('@data/sortedtsr.json')\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { library, dom } from '@fortawesome/fontawesome-svg-core'\nimport {\n    faCoffee,\n    faAddressBook,\n    faAirFreshener,\n    faAmbulance,\n    faAtom,\n    faBus,\n    faCoins,\n    faDice,\n    faAngleRight\n  } from '@fortawesome/free-solid-svg-icons'\n// class BreadCrumbElement extends React.Component {\n\nfunction BreadCrumbElement (props: {link: string, text: string}) {\n    return (\n        <>\n        <Link to={props.link} className='bc-element'>\n            {\n            props.text\n           }\n        </Link>\n        </>\n    )\n}\n\n// Specify types for Props and State\ntype MyProps = {\n    path: string[]\n}\n\n\n\n// 👇️ we set the props to empty object, and set the state to {value: string}\nconst BreadCrumb = ( props: MyProps) => {\n    var builtBC: any = [];\n    var path = \"\"\n    var path_count = 0;\n    var text = \"\"\n\n    // console.log(\"breadcrumb\", props)\n    \n    var path_origin = props.path[0]\n\n    props.path.forEach(node => {\n\n        switch (path_origin){\n            case \"appendix\":\n                switch (path_count) {\n                    case 0:\n                        text = node\n                        break;\n                    case 1: // Monster title\n                        text = KeyToTitles[node]\n                        break;\n                    default:\n                        text = \"APendix\"\n                }\n                break;\n            case \"catalog\":\n                switch(path_count) {\n                    case 0: // Catalog\n                        text = node\n                        break;\n                    case 1: // Setting\n                        text = Acronyms[node]\n                        break;\n                    case 2: // Book\n                        text = BooksIDToTitles[node]\n                        break;\n                    case 3: // Monster\n                        text = KeyToTitles[node]\n                        break;\n                    default:\n                        text= \"Catalog\"\n                }\n\n                break;\n            case \"about\":\n                switch(path_count){\n                    case 0:\n                        text = node\n                        break;\n                    default:\n                        text = \"About\"\n                }\n\n                break;\n        }\n\n        path += `/${node}`\n\n        if(path_count != 0){\n            builtBC.push(\n                <div className={breadcrumbStyle.arrowBox} key={`arrow-${node}`}>\n                    /\n                    {/* <FontAwesomeIcon icon={faAngleRight} className={breadcrumbStyle.rightArrow} /> */}\n                </div>\n            )\n        }\n        builtBC.push(\n        \n            // <div className={breadcrumbStyle.breadcrumb} key={node}>\n                <Link className={breadcrumbStyle.bcElement} to={path} key={node}>{text} </Link>\n            )\n        // builtBC.push(\n        //     <FontAwesomeIcon icon=\"angle-right\" className='right-arrow' />\n        // )\n        path_count++\n    }\n    )\n    // <div className={breadcrumbStyle.bcElement}>{x}</>\n\n\n\n    return (\n        <div className={breadcrumbStyle.bcFrame}>\n            {/* {props.path} */}\n            {/* <div className={breadcrumbStyle.startCap}/> */}\n            {builtBC}\n            <div className={breadcrumbStyle.bcBg}/>\n        </div>\n    )\n}\n\nexport default BreadCrumb;\n\n","// extracted by mini-css-extract-plugin\nexport var arrowBox = \"breadcrumb-module--arrow-box--8f143\";\nexport var bcBg = \"breadcrumb-module--bc-bg--8b107\";\nexport var bcCatalog = \"breadcrumb-module--bc-catalog--653f8\";\nexport var bcElement = \"breadcrumb-module--bc-element--36f40\";\nexport var bcFrame = \"breadcrumb-module--bc-frame--78140\";\nexport var breadcrumb = \"breadcrumb-module--breadcrumb--8d16f\";\nexport var rightArrow = \"breadcrumb-module--right-arrow--1e6a3\";\nexport var startCap = \"breadcrumb-module--start-cap--ca81e\";","import React from \"react\"\nimport { PropsWithChildren } from 'react'\n\nimport Navbar from \"./Navbar\";\nimport BreadCrumb from \"./BreadCrumb\";\n// import './Layout.css'\nimport * as layoutStyle from '@styles/modules/layout.module.css'\n\nimport Footer from \"./Footer\";\n/**\n * \n * @param param0 \n * @returns \n * \n * \n * \n * \n */\n\ntype LayoutProps = {\n  url: string\n}\n\n\n\nconst Layout = (props: PropsWithChildren<LayoutProps>) => {\n    // const url = typeof window !== 'undefined' ? window.location.pathname : '';\n    // split path\n    const relative_locs = props.url.split(\"/\")\n    // console.log(\"Layout props\",props, relative_locs)\n    if(relative_locs.length < 3){\n      relative_locs.shift();\n      \n    } else {\n      // relative_locs.pop();\n      relative_locs.shift();\n    }\n    // console.log(relative_locs)\n    // console.log(relative_locs)\n    return (\n      <div className={layoutStyle.layoutWrapper}>\n        <Navbar/>\n        <div className={layoutStyle.layout}>\n        <BreadCrumb path={relative_locs}/>\n          {/* {pathname !== \"/\" ? <BreadCrumb title={breadCrumbs[1]} setting={breadCrumbs[2]} book={breadCrumbs[3]} monster_key={breadCrumbs[4]}/> : null} */}\n          {props.children}\n        </div>\n        <Footer/>\n      </div>\n    );\n};\n\n\n\n  export default Layout","// extracted by mini-css-extract-plugin\nexport var layout = \"layout-module--layout--d56eb\";\nexport var layoutMain = \"layout-module--layout-main--c275b\";\nexport var layoutWrapper = \"layout-module--layout-wrapper--c2f92\";","// Random monster button.\nimport React from \"react\"\n\nimport { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n\nimport './RandomMonsterButton.css';\n\nimport AA_KEYS_TITLES from '../data/AA_KEYS_TITLES.json'\nimport { Link } from \"gatsby\";\n\nfunction getRandomInt(max: number) {\n    return Math.floor(Math.random() * max);\n  }\n\nconst RandomMonsterButton = () => {\n    const [monster_key, setMonsterKey] = useState('');\n    // const [monster_title, setMonsterTitle] = useState('');\n\n    const getRandomMonster = () => {\n        // if DataService.monsterTitles is undefined\n        const monsterKeys = Object.keys(AA_KEYS_TITLES);\n        //console.log(\"Random. localmonsterkeys\",monsterKeys  )\n        if(monsterKeys !== undefined){\n\n            const random_key = monsterKeys[getRandomInt(monsterKeys.length)];\n            setMonsterKey(random_key);\n        }\n    }\n\n    useEffect(() => {\n        getRandomMonster();\n    }, []);\n\n    return (\n        <div className=\"RandomMonsterButton\">\n            <Link to={\"/appendix/\" + monster_key}>\n                <div className=\"random-button\" onClick={getRandomMonster}>Random Monster</div>\n            </Link>\n        </div>\n    );\n}\n\nexport default RandomMonsterButton;","\n// const COLORS = {\n//     add2_01: \"#1250A2\",\n//     aq: \"#cc9900\",\n//     al: \"#78b345\",\n//     br: \"#4682b4\",\n//     ds: \"#ca5804\",\n//     dr: \"#cc9900\",\n//     dl: \"#ffa500\",\n//     du: \"#4C4B51\",\n//     ff: \"#1250A2\",\n//     fr: \"#ffd700\",\n//     gh: \"#ff8c46\",\n//     kt: \"#ffa000\",\n//     lm: \"#46c8c8\",\n//     rd: \"#7f0000\",\n//     mz: \"#b8860b\",\n//     ms: \"#ff3333\",\n//     ps: \"#b8860b\",\n//     rv: \"#7f0000\",\n//     rs: \"#993366\",\n//     sj: \"#4c8bc2\",\n//     th: \"#ff6633\"\n// }\n// For Titles\nconst COLORS = new Map<string, string>([\n    [\"add2_01\",  \"#1250A2\"], // /\n    [\"aq\",       \"#957000\"], // /\n    [\"al\",       \"#568132\"], // /\n    [\"br\",       \"#427aa9\"], // /\n    [\"ds\",       \"#c25404\"], // /\n    [\"dr\",       \"#957000\"], // /\n    [\"dl\",       \"#9b6400\"], // /\n    [\"du\",       \"#4C4B51\"], // /\n    [\"ff\",       \"#b15f3d\"], // /\n    [\"fr\",       \"#191970\"], // /\n    [\"gh\",       \"#b06030\"], // /\n    [\"kt\",       \"#8d7206\"], // /\n    [\"lm\",       \"#2d8181\"], // /\n    [\"rd\",       \"#7f0000\"], // /\n    [\"mz\",       \"#976e09\"], // /\n    [\"ms\",       \"#e02d2d\"], // /\n    [\"ps\",       \"#976e09\"], // /\n    [\"rv\",       \"#7f0000\"], // /\n    [\"rs\",       \"#993366\"], // /\n    [\"sj\",       \"#4279a9\"], // /\n    [\"th\",       \"#c64f28\"], // \n])\n\n\n\n\nexport default COLORS","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Bundled with Packemon: https://packemon.dev\n// Platform: browser, Support: stable, Format: esm\nimport React from 'react';\n/* eslint-disable no-bitwise, no-magic-numbers, sort-keys */\n// https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories\n\nconst TYPE_FLOW = 1;\nconst TYPE_SECTION = 1 << 1;\nconst TYPE_HEADING = 1 << 2;\nconst TYPE_PHRASING = 1 << 3;\nconst TYPE_EMBEDDED = 1 << 4;\nconst TYPE_INTERACTIVE = 1 << 5;\nconst TYPE_PALPABLE = 1 << 6; // https://developer.mozilla.org/en-US/docs/Web/HTML/Element\n\nconst tagConfigs = {\n  a: {\n    content: TYPE_FLOW | TYPE_PHRASING,\n    self: false,\n    type: TYPE_FLOW | TYPE_PHRASING | TYPE_INTERACTIVE | TYPE_PALPABLE\n  },\n  address: {\n    invalid: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'address', 'article', 'aside', 'section', 'div', 'header', 'footer'],\n    self: false\n  },\n  audio: {\n    children: ['track', 'source']\n  },\n  br: {\n    type: TYPE_FLOW | TYPE_PHRASING,\n    void: true\n  },\n  body: {\n    content: TYPE_FLOW | TYPE_SECTION | TYPE_HEADING | TYPE_PHRASING | TYPE_EMBEDDED | TYPE_INTERACTIVE | TYPE_PALPABLE\n  },\n  button: {\n    content: TYPE_PHRASING,\n    type: TYPE_FLOW | TYPE_PHRASING | TYPE_INTERACTIVE | TYPE_PALPABLE\n  },\n  caption: {\n    content: TYPE_FLOW,\n    parent: ['table']\n  },\n  col: {\n    parent: ['colgroup'],\n    void: true\n  },\n  colgroup: {\n    children: ['col'],\n    parent: ['table']\n  },\n  details: {\n    children: ['summary'],\n    type: TYPE_FLOW | TYPE_INTERACTIVE | TYPE_PALPABLE\n  },\n  dd: {\n    content: TYPE_FLOW,\n    parent: ['dl']\n  },\n  dl: {\n    children: ['dt', 'dd'],\n    type: TYPE_FLOW\n  },\n  dt: {\n    content: TYPE_FLOW,\n    invalid: ['footer', 'header'],\n    parent: ['dl']\n  },\n  figcaption: {\n    content: TYPE_FLOW,\n    parent: ['figure']\n  },\n  footer: {\n    invalid: ['footer', 'header']\n  },\n  header: {\n    invalid: ['footer', 'header']\n  },\n  hr: {\n    type: TYPE_FLOW,\n    void: true\n  },\n  img: {\n    void: true\n  },\n  li: {\n    content: TYPE_FLOW,\n    parent: ['ul', 'ol', 'menu']\n  },\n  main: {\n    self: false\n  },\n  ol: {\n    children: ['li'],\n    type: TYPE_FLOW\n  },\n  picture: {\n    children: ['source', 'img'],\n    type: TYPE_FLOW | TYPE_PHRASING | TYPE_EMBEDDED\n  },\n  rb: {\n    parent: ['ruby', 'rtc']\n  },\n  rp: {\n    parent: ['ruby', 'rtc']\n  },\n  rt: {\n    content: TYPE_PHRASING,\n    parent: ['ruby', 'rtc']\n  },\n  rtc: {\n    content: TYPE_PHRASING,\n    parent: ['ruby']\n  },\n  ruby: {\n    children: ['rb', 'rp', 'rt', 'rtc']\n  },\n  source: {\n    parent: ['audio', 'video', 'picture'],\n    void: true\n  },\n  summary: {\n    content: TYPE_PHRASING,\n    parent: ['details']\n  },\n  table: {\n    children: ['caption', 'colgroup', 'thead', 'tbody', 'tfoot', 'tr'],\n    type: TYPE_FLOW\n  },\n  tbody: {\n    parent: ['table'],\n    children: ['tr']\n  },\n  td: {\n    content: TYPE_FLOW,\n    parent: ['tr']\n  },\n  tfoot: {\n    parent: ['table'],\n    children: ['tr']\n  },\n  th: {\n    content: TYPE_FLOW,\n    parent: ['tr']\n  },\n  thead: {\n    parent: ['table'],\n    children: ['tr']\n  },\n  tr: {\n    parent: ['table', 'tbody', 'thead', 'tfoot'],\n    children: ['th', 'td']\n  },\n  track: {\n    parent: ['audio', 'video'],\n    void: true\n  },\n  ul: {\n    children: ['li'],\n    type: TYPE_FLOW\n  },\n  video: {\n    children: ['track', 'source']\n  },\n  wbr: {\n    type: TYPE_FLOW | TYPE_PHRASING,\n    void: true\n  }\n};\n\nfunction createConfigBuilder(config) {\n  return tagName => {\n    tagConfigs[tagName] = { ...config,\n      ...tagConfigs[tagName]\n    };\n  };\n}\n\n['address', 'main', 'div', 'figure', 'p', 'pre'].forEach(createConfigBuilder({\n  content: TYPE_FLOW,\n  type: TYPE_FLOW | TYPE_PALPABLE\n}));\n['abbr', 'b', 'bdi', 'bdo', 'cite', 'code', 'data', 'dfn', 'em', 'i', 'kbd', 'mark', 'q', 'ruby', 'samp', 'strong', 'sub', 'sup', 'time', 'u', 'var'].forEach(createConfigBuilder({\n  content: TYPE_PHRASING,\n  type: TYPE_FLOW | TYPE_PHRASING | TYPE_PALPABLE\n}));\n['p', 'pre'].forEach(createConfigBuilder({\n  content: TYPE_PHRASING,\n  type: TYPE_FLOW | TYPE_PALPABLE\n}));\n['s', 'small', 'span', 'del', 'ins'].forEach(createConfigBuilder({\n  content: TYPE_PHRASING,\n  type: TYPE_FLOW | TYPE_PHRASING\n}));\n['article', 'aside', 'footer', 'header', 'nav', 'section', 'blockquote'].forEach(createConfigBuilder({\n  content: TYPE_FLOW,\n  type: TYPE_FLOW | TYPE_SECTION | TYPE_PALPABLE\n}));\n['h1', 'h2', 'h3', 'h4', 'h5', 'h6'].forEach(createConfigBuilder({\n  content: TYPE_PHRASING,\n  type: TYPE_FLOW | TYPE_HEADING | TYPE_PALPABLE\n}));\n['audio', 'canvas', 'iframe', 'img', 'video'].forEach(createConfigBuilder({\n  type: TYPE_FLOW | TYPE_PHRASING | TYPE_EMBEDDED | TYPE_PALPABLE\n})); // Disable this map from being modified\n\nconst TAGS = Object.freeze(tagConfigs); // Tags that should never be allowed, even if the allow list is disabled\n\nconst BANNED_TAG_LIST = ['applet', 'base', 'body', 'command', 'embed', 'frame', 'frameset', 'head', 'html', 'link', 'meta', 'noscript', 'object', 'script', 'style', 'title'];\nconst ALLOWED_TAG_LIST = Object.keys(TAGS).filter(tag => tag !== 'canvas' && tag !== 'iframe'); // Filters apply to HTML attributes\n\nconst FILTER_ALLOW = 1;\nconst FILTER_DENY = 2;\nconst FILTER_CAST_NUMBER = 3;\nconst FILTER_CAST_BOOL = 4;\nconst FILTER_NO_CAST = 5; // Attributes not listed here will be denied\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\n\nconst ATTRIBUTES = Object.freeze({\n  alt: FILTER_ALLOW,\n  cite: FILTER_ALLOW,\n  class: FILTER_ALLOW,\n  colspan: FILTER_CAST_NUMBER,\n  controls: FILTER_CAST_BOOL,\n  datetime: FILTER_ALLOW,\n  default: FILTER_CAST_BOOL,\n  disabled: FILTER_CAST_BOOL,\n  dir: FILTER_ALLOW,\n  height: FILTER_ALLOW,\n  href: FILTER_ALLOW,\n  id: FILTER_ALLOW,\n  kind: FILTER_ALLOW,\n  label: FILTER_ALLOW,\n  lang: FILTER_ALLOW,\n  loading: FILTER_ALLOW,\n  loop: FILTER_CAST_BOOL,\n  media: FILTER_ALLOW,\n  muted: FILTER_CAST_BOOL,\n  poster: FILTER_ALLOW,\n  rel: FILTER_ALLOW,\n  role: FILTER_ALLOW,\n  rowspan: FILTER_CAST_NUMBER,\n  scope: FILTER_ALLOW,\n  sizes: FILTER_ALLOW,\n  span: FILTER_CAST_NUMBER,\n  start: FILTER_CAST_NUMBER,\n  style: FILTER_NO_CAST,\n  src: FILTER_ALLOW,\n  srclang: FILTER_ALLOW,\n  srcset: FILTER_ALLOW,\n  tabindex: FILTER_ALLOW,\n  target: FILTER_ALLOW,\n  title: FILTER_ALLOW,\n  type: FILTER_ALLOW,\n  width: FILTER_ALLOW\n}); // Attributes to camel case for React props\n\nconst ATTRIBUTES_TO_PROPS = Object.freeze({\n  class: 'className',\n  colspan: 'colSpan',\n  datetime: 'dateTime',\n  rowspan: 'rowSpan',\n  srclang: 'srcLang',\n  srcset: 'srcSet',\n  tabindex: 'tabIndex'\n});\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction Element({\n  attributes = {},\n  className,\n  children = null,\n  selfClose = false,\n  tagName\n}) {\n  const Tag = tagName;\n  return selfClose ? /*#__PURE__*/React.createElement(Tag, _extends({\n    className: className\n  }, attributes)) : /*#__PURE__*/React.createElement(Tag, _extends({\n    className: className\n  }, attributes), children);\n}\n\nclass Filter {\n  /**\n   * Filter and clean an HTML attribute value.\n   */\n  attribute(name, value) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return value;\n  }\n  /**\n   * Filter and clean an HTML node.\n   */\n\n\n  node(name, node) {\n    return node;\n  }\n\n}\n/**\n * Trigger the actual pattern match and package the matched\n * response through a callback.\n */\n\n\nfunction match(string, pattern, process, isVoid = false) {\n  const matches = string.match(pattern instanceof RegExp ? pattern : new RegExp(pattern, 'i'));\n\n  if (!matches) {\n    return null;\n  }\n\n  return {\n    match: matches[0],\n    void: isVoid,\n    ...process(matches),\n    index: matches.index,\n    length: matches[0].length,\n    valid: true\n  };\n}\n\nclass Matcher {\n  constructor(name, options, factory) {\n    _defineProperty(this, \"greedy\", false);\n\n    _defineProperty(this, \"options\", void 0);\n\n    _defineProperty(this, \"propName\", void 0);\n\n    _defineProperty(this, \"inverseName\", void 0);\n\n    _defineProperty(this, \"factory\", void 0);\n\n    if (process.env.NODE_ENV !== \"production\" && (!name || name.toLowerCase() === 'html')) {\n      throw new Error(`The matcher name \"${name}\" is not allowed.`);\n    } // @ts-expect-error Allow override\n\n\n    this.options = { ...options\n    };\n    this.propName = name;\n    this.inverseName = `no${name.charAt(0).toUpperCase() + name.slice(1)}`;\n    this.factory = factory !== null && factory !== void 0 ? factory : null;\n  }\n  /**\n   * Attempts to create a React element using a custom user provided factory,\n   * or the default matcher factory.\n   */\n\n\n  createElement(children, props) {\n    const element = this.factory ? /*#__PURE__*/React.createElement(this.factory, props, children) : this.replaceWith(children, props);\n\n    if (process.env.NODE_ENV !== \"production\" && typeof element !== 'string' && ! /*#__PURE__*/React.isValidElement(element)) {\n      throw new Error(`Invalid React element created from ${this.constructor.name}.`);\n    }\n\n    return element;\n  }\n  /**\n   * Trigger the actual pattern match and package the matched\n   * response through a callback.\n   */\n\n\n  doMatch(string, pattern, callback, isVoid = false) {\n    return match(string, pattern, callback, isVoid);\n  }\n  /**\n   * Callback triggered before parsing.\n   */\n\n\n  onBeforeParse(content, props) {\n    return content;\n  }\n  /**\n   * Callback triggered after parsing.\n   */\n\n\n  onAfterParse(content, props) {\n    return content;\n  }\n  /**\n   * Replace the match with a React element based on the matched token and optional props.\n   */\n\n\n}\n\nexport { ALLOWED_TAG_LIST as A, BANNED_TAG_LIST as B, Element as E, Filter as F, Matcher as M, TAGS as T, _extends as _, ATTRIBUTES as a, FILTER_DENY as b, ATTRIBUTES_TO_PROPS as c, FILTER_CAST_BOOL as d, FILTER_CAST_NUMBER as e, FILTER_NO_CAST as f, TYPE_FLOW as g, TYPE_SECTION as h, TYPE_HEADING as i, TYPE_PHRASING as j, TYPE_EMBEDDED as k, TYPE_INTERACTIVE as l, TYPE_PALPABLE as m, FILTER_ALLOW as n, match as o };\n//# sourceMappingURL=bundle-7aab7250.js.map\n","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Bundled with Packemon: https://packemon.dev\n// Platform: browser, Support: stable, Format: esm\nimport { F as Filter, A as ALLOWED_TAG_LIST, B as BANNED_TAG_LIST, a as ATTRIBUTES, b as FILTER_DENY, c as ATTRIBUTES_TO_PROPS, T as TAGS, E as Element, d as FILTER_CAST_BOOL, e as FILTER_CAST_NUMBER, f as FILTER_NO_CAST } from './bundle-7aab7250.js';\nexport { A as ALLOWED_TAG_LIST, a as ATTRIBUTES, c as ATTRIBUTES_TO_PROPS, B as BANNED_TAG_LIST, E as Element, n as FILTER_ALLOW, d as FILTER_CAST_BOOL, e as FILTER_CAST_NUMBER, b as FILTER_DENY, f as FILTER_NO_CAST, F as Filter, M as Matcher, T as TAGS, k as TYPE_EMBEDDED, g as TYPE_FLOW, i as TYPE_HEADING, l as TYPE_INTERACTIVE, m as TYPE_PALPABLE, j as TYPE_PHRASING, h as TYPE_SECTION, o as match } from './bundle-7aab7250.js';\nimport React from 'react';\nimport escapeHtml from 'escape-html';\nconst INVALID_STYLES = /(url|image|image-set)\\(/i;\n\nclass StyleFilter extends Filter {\n  attribute(name, value) {\n    if (name === 'style') {\n      Object.keys(value).forEach(key => {\n        if (String(value[key]).match(INVALID_STYLES)) {\n          // eslint-disable-next-line no-param-reassign\n          delete value[key];\n        }\n      });\n    } // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\n\n    return value;\n  }\n\n}\n/* eslint-disable no-bitwise, no-cond-assign, complexity, @typescript-eslint/no-unsafe-return */\n\n\nconst ELEMENT_NODE = 1;\nconst TEXT_NODE = 3;\nconst INVALID_ROOTS = /^<(!doctype|(html|head|body)(\\s|>))/i;\nconst ALLOWED_ATTRS = /^(aria-|data-|\\w+:)/iu;\nconst OPEN_TOKEN = /{{{(\\w+)\\/?}}}/;\n\nfunction createDocument() {\n  // Maybe SSR? Just do nothing instead of crashing!\n  if (typeof window === 'undefined' || typeof document === 'undefined') {\n    return undefined;\n  }\n\n  return document.implementation.createHTMLDocument('Interweave');\n}\n\nclass Parser {\n  constructor(markup, props = {}, matchers = [], filters = []) {\n    var _props$allowList;\n\n    _defineProperty(this, \"allowed\", void 0);\n\n    _defineProperty(this, \"banned\", void 0);\n\n    _defineProperty(this, \"blocked\", void 0);\n\n    _defineProperty(this, \"container\", void 0);\n\n    _defineProperty(this, \"content\", []);\n\n    _defineProperty(this, \"props\", void 0);\n\n    _defineProperty(this, \"matchers\", void 0);\n\n    _defineProperty(this, \"filters\", void 0);\n\n    _defineProperty(this, \"keyIndex\", void 0);\n\n    if (process.env.NODE_ENV !== \"production\" && markup && typeof markup !== 'string') {\n      throw new TypeError('Interweave parser requires a valid string.');\n    }\n\n    this.props = props;\n    this.matchers = matchers;\n    this.filters = [...filters, new StyleFilter()];\n    this.keyIndex = -1;\n    this.container = this.createContainer(markup || '');\n    this.allowed = new Set((_props$allowList = props.allowList) !== null && _props$allowList !== void 0 ? _props$allowList : ALLOWED_TAG_LIST);\n    this.banned = new Set(BANNED_TAG_LIST);\n    this.blocked = new Set(props.blockList);\n  }\n  /**\n   * Loop through and apply all registered attribute filters.\n   */\n\n\n  applyAttributeFilters(name, value) {\n    return this.filters.reduce((nextValue, filter) => nextValue !== null && typeof filter.attribute === 'function' ? filter.attribute(name, nextValue) : nextValue, value);\n  }\n  /**\n   * Loop through and apply all registered node filters.\n   */\n\n\n  applyNodeFilters(name, node) {\n    // Allow null to be returned\n    return this.filters.reduce((nextNode, filter) => nextNode !== null && typeof filter.node === 'function' ? filter.node(name, nextNode) : nextNode, node);\n  }\n  /**\n   * Loop through and apply all registered matchers to the string.\n   * If a match is found, create a React element, and build a new array.\n   * This array allows React to interpolate and render accordingly.\n   */\n\n\n  applyMatchers(string, parentConfig) {\n    const elements = {};\n    const {\n      props\n    } = this;\n    let matchedString = string;\n    let elementIndex = 0;\n    let parts = null;\n    this.matchers.forEach(matcher => {\n      const tagName = matcher.asTag().toLowerCase();\n      const config = this.getTagConfig(tagName); // Skip matchers that have been disabled from props or are not supported\n\n      if (props[matcher.inverseName] || !this.isTagAllowed(tagName)) {\n        return;\n      } // Skip matchers in which the child cannot be rendered\n\n\n      if (!this.canRenderChild(parentConfig, config)) {\n        return;\n      } // Continuously trigger the matcher until no matches are found\n\n\n      let tokenizedString = '';\n\n      while (matchedString && (parts = matcher.match(matchedString))) {\n        const {\n          index,\n          length,\n          match,\n          valid,\n          void: isVoid,\n          ...partProps\n        } = parts;\n        const tokenName = matcher.propName + String(elementIndex); // Piece together a new string with interpolated tokens\n\n        if (index > 0) {\n          tokenizedString += matchedString.slice(0, index);\n        }\n\n        if (valid) {\n          tokenizedString += isVoid ? `{{{${tokenName}/}}}` : `{{{${tokenName}}}}${match}{{{/${tokenName}}}}`;\n          this.keyIndex += 1;\n          elementIndex += 1;\n          elements[tokenName] = {\n            children: match,\n            matcher,\n            props: { ...props,\n              ...partProps,\n              key: this.keyIndex\n            }\n          };\n        } else {\n          tokenizedString += match;\n        } // Reduce the string being matched against,\n        // otherwise we end up in an infinite loop!\n\n\n        if (matcher.greedy) {\n          matchedString = tokenizedString + matchedString.slice(index + length);\n          tokenizedString = '';\n        } else {\n          // eslint-disable-next-line unicorn/explicit-length-check\n          matchedString = matchedString.slice(index + (length || match.length));\n        }\n      } // Update the matched string with the tokenized string,\n      // so that the next matcher can apply to it.\n\n\n      if (!matcher.greedy) {\n        matchedString = tokenizedString + matchedString;\n      }\n    });\n\n    if (elementIndex === 0) {\n      return string;\n    }\n\n    return this.replaceTokens(matchedString, elements);\n  }\n  /**\n   * Determine whether the child can be rendered within the parent.\n   */\n\n\n  canRenderChild(parentConfig, childConfig) {\n    if (!parentConfig.tagName || !childConfig.tagName) {\n      return false;\n    } // No children\n\n\n    if (parentConfig.void) {\n      return false;\n    } // Valid children\n\n\n    if (parentConfig.children.length > 0) {\n      return parentConfig.children.includes(childConfig.tagName);\n    }\n\n    if (parentConfig.invalid.length > 0 && parentConfig.invalid.includes(childConfig.tagName)) {\n      return false;\n    } // Valid parent\n\n\n    if (childConfig.parent.length > 0) {\n      return childConfig.parent.includes(parentConfig.tagName);\n    } // Self nesting\n\n\n    if (!parentConfig.self && parentConfig.tagName === childConfig.tagName) {\n      return false;\n    } // Content category type\n\n\n    return Boolean(parentConfig && parentConfig.content & childConfig.type);\n  }\n  /**\n   * Convert line breaks in a string to HTML `<br/>` tags.\n   * If the string contains HTML, we should not convert anything,\n   * as line breaks should be handled by `<br/>`s in the markup itself.\n   */\n\n\n  convertLineBreaks(markup) {\n    const {\n      noHtml,\n      disableLineBreaks\n    } = this.props;\n\n    if (noHtml || disableLineBreaks || markup.match(/<((?:\\/[ a-z]+)|(?:[ a-z]+\\/))>/gi)) {\n      return markup;\n    } // Replace carriage returns\n\n\n    let nextMarkup = markup.replace(/\\r\\n/g, '\\n'); // Replace long line feeds\n\n    nextMarkup = nextMarkup.replace(/\\n{3,}/g, '\\n\\n\\n'); // Replace line feeds with `<br/>`s\n\n    nextMarkup = nextMarkup.replace(/\\n/g, '<br/>');\n    return nextMarkup;\n  }\n  /**\n   * Create a detached HTML document that allows for easy HTML\n   * parsing while not triggering scripts or loading external\n   * resources.\n   */\n\n\n  createContainer(markup) {\n    var _this$props$container;\n\n    const factory = typeof global !== 'undefined' && global.INTERWEAVE_SSR_POLYFILL || createDocument;\n    const doc = factory();\n\n    if (!doc) {\n      return undefined;\n    }\n\n    const tag = (_this$props$container = this.props.containerTagName) !== null && _this$props$container !== void 0 ? _this$props$container : 'body';\n    const el = tag === 'body' || tag === 'fragment' ? doc.body : doc.createElement(tag);\n\n    if (markup.match(INVALID_ROOTS)) {\n      if (process.env.NODE_ENV !== \"production\") {\n        throw new Error('HTML documents as Interweave content are not supported.');\n      }\n    } else {\n      el.innerHTML = this.convertLineBreaks(this.props.escapeHtml ? escapeHtml(markup) : markup);\n    }\n\n    return el;\n  }\n  /**\n   * Convert an elements attribute map to an object map.\n   * Returns null if no attributes are defined.\n   */\n\n\n  extractAttributes(node) {\n    const {\n      allowAttributes\n    } = this.props;\n    const attributes = {};\n    let count = 0;\n\n    if (node.nodeType !== ELEMENT_NODE || !node.attributes) {\n      return null;\n    } // @ts-expect-error Cant type iterator\n\n\n    [...node.attributes].forEach(attr => {\n      const {\n        name,\n        value\n      } = attr;\n      const newName = name.toLowerCase();\n      const filter = ATTRIBUTES[newName] || ATTRIBUTES[name]; // Verify the node is safe from attacks\n\n      if (!this.isSafe(node)) {\n        return;\n      } // Do not allow denied attributes, excluding ARIA attributes\n      // Do not allow events or XSS injections\n\n\n      if (!newName.match(ALLOWED_ATTRS) && (!allowAttributes && (!filter || filter === FILTER_DENY) || newName.startsWith('on') || value.replace(/(\\s|\\0|&#x0([9AD]);)/, '').match(/(javascript|vbscript|livescript|xss):/i))) {\n        return;\n      } // Apply attribute filters\n\n\n      let newValue = newName === 'style' ? this.extractStyleAttribute(node) : value; // Cast to boolean\n\n      if (filter === FILTER_CAST_BOOL) {\n        newValue = true; // Cast to number\n      } else if (filter === FILTER_CAST_NUMBER) {\n        newValue = Number.parseFloat(String(newValue)); // Cast to string\n      } else if (filter !== FILTER_NO_CAST) {\n        newValue = String(newValue);\n      }\n\n      attributes[ATTRIBUTES_TO_PROPS[newName] || newName] = this.applyAttributeFilters(newName, newValue);\n      count += 1;\n    });\n\n    if (count === 0) {\n      return null;\n    }\n\n    return attributes;\n  }\n  /**\n   * Extract the style attribute as an object and remove values that allow for attack vectors.\n   */\n\n\n  extractStyleAttribute(node) {\n    const styles = {}; // eslint-disable-next-line unicorn/prefer-spread\n\n    Array.from(node.style).forEach(key => {\n      const value = node.style[key];\n\n      if (typeof value === 'string' || typeof value === 'number') {\n        styles[key.replace(/-([a-z])/g, (match, letter) => String(letter).toUpperCase())] = value;\n      }\n    });\n    return styles;\n  }\n  /**\n   * Return configuration for a specific tag.\n   */\n\n\n  getTagConfig(tagName) {\n    const common = {\n      children: [],\n      content: 0,\n      invalid: [],\n      parent: [],\n      self: true,\n      tagName: '',\n      type: 0,\n      void: false\n    }; // Only spread when a tag config exists,\n    // otherwise we use the empty `tagName`\n    // for parent config inheritance.\n\n    if (TAGS[tagName]) {\n      return { ...common,\n        ...TAGS[tagName],\n        tagName\n      };\n    }\n\n    return common;\n  }\n  /**\n   * Verify that a node is safe from XSS and injection attacks.\n   */\n\n\n  isSafe(node) {\n    // URLs should only support HTTP, email and phone numbers\n    if (typeof HTMLAnchorElement !== 'undefined' && node instanceof HTMLAnchorElement) {\n      const href = node.getAttribute('href'); // Fragment protocols start with about:\n      // So let's just allow them\n\n      if (href !== null && href !== void 0 && href.startsWith('#')) {\n        return true;\n      }\n\n      const protocol = node.protocol.toLowerCase();\n      return protocol === ':' || protocol === 'http:' || protocol === 'https:' || protocol === 'mailto:' || protocol === 'tel:';\n    }\n\n    return true;\n  }\n  /**\n   * Verify that an HTML tag is allowed to render.\n   */\n\n\n  isTagAllowed(tagName) {\n    if (this.banned.has(tagName) || this.blocked.has(tagName)) {\n      return false;\n    } // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n\n\n    return this.props.allowElements || this.allowed.has(tagName);\n  }\n  /**\n   * Parse the markup by injecting it into a detached document,\n   * while looping over all child nodes and generating an\n   * array to interpolate into JSX.\n   */\n\n\n  parse() {\n    if (!this.container) {\n      return [];\n    }\n\n    return this.parseNode(this.container, this.getTagConfig(this.container.nodeName.toLowerCase()));\n  }\n  /**\n   * Loop over the nodes children and generate a\n   * list of text nodes and React elements.\n   */\n\n\n  parseNode(parentNode, parentConfig) {\n    const {\n      noHtml,\n      noHtmlExceptMatchers,\n      allowElements,\n      transform,\n      transformOnlyAllowList\n    } = this.props;\n    let content = [];\n    let mergedText = ''; // @ts-expect-error Cant type iterator\n\n    [...parentNode.childNodes].forEach(node => {\n      // Create React elements from HTML elements\n      if (node.nodeType === ELEMENT_NODE) {\n        const tagName = node.nodeName.toLowerCase();\n        const config = this.getTagConfig(tagName); // Persist any previous text\n\n        if (mergedText) {\n          content.push(mergedText);\n          mergedText = '';\n        } // Apply node filters first\n\n\n        const nextNode = this.applyNodeFilters(tagName, node);\n\n        if (!nextNode) {\n          return;\n        } // Apply transformation second\n\n\n        let children;\n\n        if (transform && !(transformOnlyAllowList && !this.isTagAllowed(tagName))) {\n          this.keyIndex += 1;\n          const key = this.keyIndex; // Must occur after key is set\n\n          children = this.parseNode(nextNode, config);\n          const transformed = transform(nextNode, children, config);\n\n          if (transformed === null) {\n            return;\n          }\n\n          if (typeof transformed !== 'undefined') {\n            content.push( /*#__PURE__*/React.cloneElement(transformed, {\n              key\n            }));\n            return;\n          } // Reset as we're not using the transformation\n\n\n          this.keyIndex = key - 1;\n        } // Never allow these tags (except via a transformer)\n\n\n        if (this.banned.has(tagName)) {\n          return;\n        } // Only render when the following criteria is met:\n        //  - HTML has not been disabled\n        //  - Tag is allowed\n        //  - Child is valid within the parent\n\n\n        if (!(noHtml || noHtmlExceptMatchers && tagName !== 'br') && this.isTagAllowed(tagName) && (allowElements || this.canRenderChild(parentConfig, config))) {\n          var _children;\n\n          this.keyIndex += 1; // Build the props as it makes it easier to test\n\n          const attributes = this.extractAttributes(nextNode);\n          const elementProps = {\n            tagName\n          };\n\n          if (attributes) {\n            elementProps.attributes = attributes;\n          }\n\n          if (config.void) {\n            elementProps.selfClose = config.void;\n          }\n\n          content.push( /*#__PURE__*/React.createElement(Element, { ...elementProps,\n            key: this.keyIndex\n          }, (_children = children) !== null && _children !== void 0 ? _children : this.parseNode(nextNode, config))); // Render the children of the current element only.\n          // Important: If the current element is not allowed,\n          // use the parent element for the next scope.\n        } else {\n          content = [...content, ...this.parseNode(nextNode, config.tagName ? config : parentConfig)];\n        } // Apply matchers if a text node\n\n      } else if (node.nodeType === TEXT_NODE) {\n        const text = noHtml && !noHtmlExceptMatchers ? node.textContent : // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        this.applyMatchers(node.textContent || '', parentConfig);\n\n        if (Array.isArray(text)) {\n          content = [...content, ...text];\n        } else {\n          mergedText += text;\n        }\n      }\n    });\n\n    if (mergedText) {\n      content.push(mergedText);\n    }\n\n    return content;\n  }\n  /**\n   * Deconstruct the string into an array, by replacing custom tokens with React elements,\n   * so that React can render it correctly.\n   */\n\n\n  replaceTokens(tokenizedString, elements) {\n    if (!tokenizedString.includes('{{{')) {\n      return tokenizedString;\n    }\n\n    const nodes = [];\n    let text = tokenizedString;\n    let open = null; // Find an open token tag\n\n    while (open = text.match(OPEN_TOKEN)) {\n      const [match, tokenName] = open;\n      const startIndex = open.index;\n      const isVoid = match.includes('/');\n\n      if (process.env.NODE_ENV !== \"production\" && !elements[tokenName]) {\n        throw new Error(`Token \"${tokenName}\" found but no matching element to replace with.`);\n      } // Extract the previous non-token text\n\n\n      if (startIndex > 0) {\n        nodes.push(text.slice(0, startIndex)); // Reduce text so that the closing tag will be found after the opening\n\n        text = text.slice(startIndex);\n      }\n\n      const {\n        children,\n        matcher,\n        props: elementProps\n      } = elements[tokenName];\n      let endIndex; // Use tag as-is if void\n\n      if (isVoid) {\n        endIndex = match.length;\n        nodes.push(matcher.createElement(children, elementProps)); // Find the closing tag if not void\n      } else {\n        const close = text.match(new RegExp(`{{{/${tokenName}}}}`));\n\n        if (process.env.NODE_ENV !== \"production\" && !close) {\n          throw new Error(`Closing token missing for interpolated element \"${tokenName}\".`);\n        }\n\n        endIndex = close.index + close[0].length;\n        nodes.push(matcher.createElement(this.replaceTokens(text.slice(match.length, close.index), elements), elementProps));\n      } // Reduce text for the next interation\n\n\n      text = text.slice(endIndex);\n    } // Extra the remaining text\n\n\n    if (text.length > 0) {\n      nodes.push(text);\n    } // Reduce to a string if possible\n\n\n    if (nodes.length === 0) {\n      return '';\n    }\n\n    if (nodes.length === 1 && typeof nodes[0] === 'string') {\n      return nodes[0];\n    }\n\n    return nodes;\n  }\n\n}\n/* eslint-disable react/jsx-fragments */\n\n\nfunction Markup(props) {\n  var _ref;\n\n  const {\n    attributes,\n    className,\n    containerTagName,\n    content,\n    emptyContent,\n    parsedContent,\n    tagName,\n    noWrap: baseNoWrap\n  } = props;\n  const tag = (_ref = containerTagName !== null && containerTagName !== void 0 ? containerTagName : tagName) !== null && _ref !== void 0 ? _ref : 'span';\n  const noWrap = tag === 'fragment' ? true : baseNoWrap;\n  let mainContent;\n\n  if (parsedContent) {\n    mainContent = parsedContent;\n  } else {\n    const markup = new Parser(content !== null && content !== void 0 ? content : '', props).parse();\n\n    if (markup.length > 0) {\n      mainContent = markup;\n    }\n  }\n\n  if (!mainContent) {\n    mainContent = emptyContent;\n  }\n\n  if (noWrap) {\n    // eslint-disable-next-line react/jsx-no-useless-fragment\n    return /*#__PURE__*/React.createElement(React.Fragment, null, mainContent);\n  }\n\n  return /*#__PURE__*/React.createElement(Element, {\n    attributes: attributes,\n    className: className,\n    tagName: tag\n  }, mainContent);\n}\n/* eslint-disable promise/prefer-await-to-callbacks */\n\n\nfunction Interweave(props) {\n  const {\n    attributes,\n    className,\n    content = '',\n    disableFilters = false,\n    disableMatchers = false,\n    emptyContent = null,\n    filters = [],\n    matchers = [],\n    onAfterParse = null,\n    onBeforeParse = null,\n    tagName = 'span',\n    noWrap = false,\n    ...parserProps\n  } = props;\n  const allMatchers = disableMatchers ? [] : matchers;\n  const allFilters = disableFilters ? [] : filters;\n  const beforeCallbacks = onBeforeParse ? [onBeforeParse] : [];\n  const afterCallbacks = onAfterParse ? [onAfterParse] : []; // Inherit callbacks from matchers\n\n  allMatchers.forEach(matcher => {\n    if (matcher.onBeforeParse) {\n      beforeCallbacks.push(matcher.onBeforeParse.bind(matcher));\n    }\n\n    if (matcher.onAfterParse) {\n      afterCallbacks.push(matcher.onAfterParse.bind(matcher));\n    }\n  }); // Trigger before callbacks\n\n  const markup = beforeCallbacks.reduce((string, callback) => {\n    const nextString = callback(string, props);\n\n    if (process.env.NODE_ENV !== \"production\" && typeof nextString !== 'string') {\n      throw new TypeError('Interweave `onBeforeParse` must return a valid HTML string.');\n    }\n\n    return nextString;\n  }, content !== null && content !== void 0 ? content : ''); // Parse the markup\n\n  const parser = new Parser(markup, parserProps, allMatchers, allFilters); // Trigger after callbacks\n\n  const nodes = afterCallbacks.reduce((parserNodes, callback) => {\n    const nextNodes = callback(parserNodes, props);\n\n    if (process.env.NODE_ENV !== \"production\" && !Array.isArray(nextNodes)) {\n      throw new TypeError('Interweave `onAfterParse` must return an array of strings and React elements.');\n    }\n\n    return nextNodes;\n  }, parser.parse());\n  return /*#__PURE__*/React.createElement(Markup, {\n    attributes: attributes,\n    className: className // eslint-disable-next-line react/destructuring-assignment\n    ,\n    containerTagName: props.containerTagName,\n    emptyContent: emptyContent,\n    noWrap: noWrap,\n    parsedContent: nodes.length === 0 ? undefined : nodes,\n    tagName: tagName\n  });\n}\n\nexport { Interweave, Markup, Parser };\n//# sourceMappingURL=index.js.map\n","\n\nfunction getMonsterDescription(monster_key: string, fullBodyString: string): string {\n    let description = \"\"\n    const regexp = /<p class=\\\"f\\\">([^<].+?)<\\/p>/;\n    // const regexp = /(<p class=\\\\\"f\\\\\">)/gm;\n    // const regexp = /(<p class)/gm;\n    // const regexp = /<p class=/;\n    // const matches = fullBodyString.matchAll(regexp);\n    const match = fullBodyString.match(regexp)\n    // for (const match of fullBodyString.matchAll(regexp)) {\n    //   console.log(`Match! ${match[1]}`);\n    // }\n    if(match !== null){\n      if(match[1]){\n        description = match[1]  \n      }\n      // console.log(\"Match found!\")\n    } \n    // console.log(\"Description for: \", monster_key)\n    \n    // Filter html blocks\n    description = description.replace(/<.*?>/g, \"\")\n    \n    // console.log(description)\n    return description\n  }\n\nexport default getMonsterDescription;","import React from \"react\"\n// import { useEffect, useState } from 'react'\n\nimport Layout from '../components/Layout';\nimport {  PageProps, Link, HeadFC, HeadProps, graphql  } from \"gatsby\";\n\nimport { CreatePagesArgs } from 'gatsby';\nimport { Interweave } from \"interweave\";\n\n// Formatting\nimport \"@styles/SettingColors.css\"\n// import \"../styles/MonsterPage.css\"\nimport COLORS from '@styles/SettingColors'\nimport RandomMonsterButton from \"@components/RandomMonsterButton\";\n\nimport * as monsterPageStyles from \"@styles/modules/monsterpage.module.css\"\n\nimport getMonsterDescription from \"@components/regex_description\"\n\nconst isBrowser = typeof window !== \"undefined\"\n\nconst cat_acronyms = require('@data/CatAcronyms.json')\nconst sorted_tsr = require('@data/sortedtsr.json')\n///////////\n// Styles\n\nconst settingImageStyle = {\n  float: \"right\",\n  width: \"150px\",\n}\n\nconst headingStyles = {\n  marginTop: 0,\n  marginBottom: 64,\n  maxWidth: 320,\n}\n\ntype MonsterDataType = {\n    TSR: string[],\n    fullBody: string,\n    images: string[],\n    setting: string,\n    statblock: Object,\n    title: string\n}\n\ntype MonsterPageContext = {\n    monster_key: string\n    monster_data: MonsterDataType\n    sources: string[]\n    statblock_names: string[]\n    title: string\n    prev_key: string\n    next_key: string\n    monster_path: string\n    // intereweave_body: JSX.Element\n}\n\ninterface Props {\n  pageContext: MonsterPageContext\n  }\n\n\n\n\nconst MonsterTemplate: React.FC<Props> = ( {pageContext} ) => {\n//   const [screenSize, setScreenSize] = useState(getCurrentDimension());\n\n//   function getCurrentDimension(){\n//     if(isBrowser){\n\n//       return {\n//         width: global.window.innerWidth,\n//       \theight: global.window.innerHeight\n//       }\n//     } else {\n//       return {\n//         width: 0,\n//         height: 0,\n//       }\n//     }\n// }\n\n//   useEffect(() => {\n//     const updateDimension = () => {\n//       setScreenSize(getCurrentDimension())\n//     }\n//     if(isBrowser)\n//       global.window.addEventListener('resize', updateDimension);\n    \n//     return(() => {\n//         global.window.removeEventListener('resize', updateDimension);\n//     })\n//   }, [screenSize])\n\n\n  const monster_page_data: MonsterPageContext = pageContext\n  // console.log(monster_page_data)\n  // const monster_object = pageContext.monster_object\n//   console.log(\"monster page\")\n//   console.log(monster_page_data)\n  // console.log(\"monster template\")\n  // console.log(monster_object)\n  const monster_key = monster_page_data.monster_key\n  const title = monster_page_data.title\n  const sources = monster_page_data.sources\n  const previous_monster_key = monster_page_data.prev_key\n  const next_monster_key = monster_page_data.next_key\n\n  const fullBody = monster_page_data.monster_data.fullBody;\n  // Getting the fullbody data and putting it into React state\n  // to prevent hydration issue on refresh\n\n  // const [interweave_body, setInterweave] = useState<JSX.Element>();\n\n  // Data does't start loading\n  // until *after* Parent is mounted\n  // useEffect(() => {\n  //   setInterweave(<Interweave className=\"interweave\" content={fullBody} />)\n  // }, []);\n\n\n  //   console.log(previous_monster_key, next_monster_key)\n  // Checking Main Image\n  //  If the regex pattern matches, know we NEED an image. So set the url to where it should be with monster_key\n  //  and also have an onerror=\"javascript:this.src='images/default.jpg'\" to set the image to default if it doesn't exist\n  //  If doesn't need image, set the bool flag and no image will be rendered\n  let monster_image = null;\n  let needs_image = true;\n  let image_url = \"\";\n  // if(monster_page_data.monster_data.images[1]) regex contains monster_key\n  if(monster_page_data.monster_data.images[1] && monster_page_data.monster_data.images[1].match(new RegExp(monster_page_data.monster_key, \"g\"))){\n      // console.log(\"Should have image\")\n      needs_image = true;\n  } else {\n      // console.log(\"Does not have image\")\n      needs_image = false;\n  }\n\n  if(needs_image){\n      // Set image url\n      image_url = \"/images/monsters/img/\" + monster_page_data.monster_key + \".gif\"\n      let image_placeholder = \"https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg\"\n\n      monster_image = <img className={monsterPageStyles.monsterImage}   src={image_url}\n      alt={monster_page_data.monster_data.title} \n      title={monster_page_data.monster_data.title} \n      onError={({currentTarget}) => {\n          currentTarget.onerror = null;\n          currentTarget.alt = \"This monster is missing it's image. It will be found eventually.\";\n          currentTarget.src = image_placeholder;\n          currentTarget.title = \"Missing image of \" + monster_page_data.monster_data.title;\n      }}/>\n\n  } \n    \n  // Change document title to monster title\n  if(typeof document !== 'undefined'){\n      // document.title = monster_page_data.monster_data.title + \" - Complete Compendium\";\n  }\n\n  // Handle setting and accent color.\n  const setting_name = monster_page_data.monster_data.setting;\n  const setting_acr = cat_acronyms[setting_name]\n  var hrClass = \"hr2\"\n  var titleStyle = {}\n  if(setting_acr){\n      hrClass = \"hr2-\" + setting_acr\n      const colorVar = \"--color-\" + setting_acr\n      titleStyle = {color: COLORS.get(setting_acr)}\n  }\n\n  // Title style\n\n  // const interweaveMonsterBody: JSX.Element = <div className=\"set-html\" dangerouslySetInnerHTML={{__html: fullBody}} />\n\n  let monsterNavWidgets: JSX.Element =\n  <div>\n    <div className={monsterPageStyles.monsterNavLinks}>\n      <div className={monsterPageStyles.pageRandomMonsterButton}>\n        <RandomMonsterButton />\n      </div>\n      <div className={monsterPageStyles.horizontalMonsterLinks}>\n        <Link className={monsterPageStyles.monsterNavLink} to={\"../\" + previous_monster_key}>\n          <div className={monsterPageStyles.monsterNav}>\n              Previous\n          </div>\n        </Link>\n        {/* Random Monster */}\n        {/* <div className={monsterPageStyles.monsterNav}>\n            <RandomMonsterButton />\n          </div> */}\n        <Link className={monsterPageStyles.monsterNavLink} to={\"../\" + next_monster_key}>\n          <div className={monsterPageStyles.monsterNav}>\n            Next\n          </div>\n        </Link>\n      </div>\n    </div>\n  </div>\n  \n  // if(screenSize.width < 420){\n  //   monsterNavWidgets = <div>\n  //                         <div className={monsterPageStyles.monsterNavLinks}>\n  //                           <div className={monsterPageStyles.pageRandomMonsterButton}>\n  //                             <RandomMonsterButton />\n  //                           </div>\n  //                           <div className={monsterPageStyles.horizontalMonsterLinks}>\n  //                             <Link className={monsterPageStyles.monsterNavLink} to={\"../\" + previous_monster_key}>\n  //                               <div className={monsterPageStyles.monsterNav}>\n  //                                   Previous\n  //                               </div>\n  //                             </Link>\n  //                             {/* Random Monster */}\n  //                             {/* <div className={monsterPageStyles.monsterNav}>\n  //                                 <RandomMonsterButton />\n  //                               </div> */}\n  //                             <Link className={monsterPageStyles.monsterNavLink} to={\"../\" + next_monster_key}>\n  //                               <div className={monsterPageStyles.monsterNav}>\n  //                                 Next\n  //                               </div>\n  //                             </Link>\n  //                           </div>\n  //                         </div>\n  //                       </div>\n  // } else {\n  //   monsterNavWidgets = <div>\n  //   <div className={monsterPageStyles.monsterNavLinks}>\n  //     <div className={monsterPageStyles.pageRandomMonsterButton}>\n  //       <RandomMonsterButton />\n  //     </div>\n  //     <div className={monsterPageStyles.horizontalMonsterLinks}>\n  //       <Link className={monsterPageStyles.monsterNavLink} to={\"../\" + previous_monster_key}>\n  //         <div className={monsterPageStyles.monsterNav}>\n  //             Previous\n  //         </div>\n  //       </Link>\n  //       {/* Random Monster */}\n  //       {/* <div className={monsterPageStyles.monsterNav}>\n  //           <RandomMonsterButton />\n  //         </div> */}\n  //       <Link className={monsterPageStyles.monsterNavLink} to={\"../\" + next_monster_key}>\n  //         <div className={monsterPageStyles.monsterNav}>\n  //           Next\n  //         </div>\n  //       </Link>\n  //     </div>\n  //   </div>\n  // </div>\n  // }\n\n  // if(monster_key == \"horax\"){\n  //   console.log(\"appendix template monster, HORAX\")\n  //   console.log(pageContext)\n  //   console.log(\"prev\", previous_monster_key)\n  //   console.log(\"next\", next_monster_key)\n  // }\n  const test_jsx: JSX.Element = <div>Test JSX Element</div>\n\n\n  // const { book_data } = data\n  return (\n    <>\n    \n    {/* <Head title={monster_page_data.monster_data.title} description={`Description for ${monster_page_data.monster_data.title}`} /> */}\n    <Layout url={`/appendix/${monster_key}`}>\n      <div>\n        {/* <div>\n          <div className={monsterPageStyles.monsterNavLinks}>\n            <Link className={monsterPageStyles.monsterNavLink} to={\"../\" + previous_monster_key}>\n              <div className={monsterPageStyles.monsterNav}>\n                  Previous\n              </div>\n            </Link>\n            <div className=\"page_random_monster_button\">\n              <RandomMonsterButton />\n            </div>\n            <Link className={monsterPageStyles.monsterNavLink} to={\"../\" + next_monster_key}>\n              <div className={monsterPageStyles.monsterNav}>\n                Next\n              </div>\n            </Link>\n          </div>\n        </div> */}\n        {monsterNavWidgets}\n\n\n      {/* TITLE */}\n      <div className={monsterPageStyles.topHeader}>\n          <h1 style={titleStyle}>{monster_page_data.monster_data.title}</h1>\n          <Link to={\"/catalog/\" + cat_acronyms[monster_page_data.monster_data.setting]}>\n              <img className={monsterPageStyles.settingImage} src={`/img_settings/${cat_acronyms[monster_page_data.monster_data.setting]}.gif`}  alt={monster_page_data.monster_data.setting + \"Campaign Setting Logo\"} title={monster_page_data.monster_data.setting}/>\n          </Link>\n      </div>\n      \n      <hr className ={monsterPageStyles.hr1}/>\n      <hr className ={hrClass}/>\n\n      <div className={monsterPageStyles.monsterImgFrame}>\n      {monster_image}\n      </div>\n\n      <Interweave className=\"interweave\" content={fullBody} />\n      {/* {interweaveMonsterBody} */}\n\n      {/* <Interweave content=\"This string contains <b>HTML</b> and will safely be rendered!\" /> */}\n      {/* {test_jsx} */}\n      {/* TSR Array */}\n      <div className={monsterPageStyles.sourceList}>\n        <div className={monsterPageStyles.tsrLabel}>\n            Sourcebooks:\n        </div>\n        <div className={monsterPageStyles.tsr}>\n            {\n                (monster_page_data.monster_data.hasOwnProperty(\"TSR\") && monster_page_data.monster_data[\"TSR\"] != null) ?\n                    monster_page_data.monster_data[\"TSR\"].map((tsr: string) => {\n                        return (\n                            <div key={tsr}>\n                                <Link to={\"/catalog/\" + cat_acronyms[monster_page_data.monster_data.setting] + \"/\" + tsr}>{sorted_tsr[tsr]} ({tsr})</Link>\n                                <br/>\n                            </div>\n                        )\n                    }\n                )\n                : \"No TSR\"\n            }\n        </div>\n    </div>\n\n    {/* LAST MODIFIED */}\n    {/* <div className=\"last-modified\">\n        Last Modified: {monster_page_data.updatedAt}\n    </div> */}\n\n\n\n\n      </div>\n    </Layout>\n    </>\n  )\n}\n\n// interface HeadProps {\n//   location: any,\n//   params: any,\n//   data: any,\n//   pageContext: MonsterPageContext\n// }\n\n\n\n// export function Head ({ location, params, data, pageContext }: HeadProps) => (\n//   <>\n//     <title>{pageContext.title}</title>\n//     <meta name=\"description\" content={data.page.description} />\n//     <meta\n//       name=\"twitter:url\"\n//       content={`https://www.foobar.tld/${location.pathname}`}\n//     />\n//   </>\n// )\n\n// export function Head(props: HeadProps<DataProps>){\n\n//   // Extract description.\n\n//   // Demo description for now.\n\n//   const monster_desc = `Description for ${props.data.sitePage.pageContext.title}`\n//   console.log(\"Head\", props.data.sitePage.pageContext)\n\n//   return (\n//     <>\n//       <title>{props.data.sitePage.pageContext.title}</title>\n//       <meta name=\"description\" content={monster_desc} />\n//     </>\n//   )\n// }\n\n\n\n// export const Head = () => (\n//   <>\n//     <title>Hello World</title>\n//     <meta name=\"description\" content=\"Hello World\" />\n//   </>\n// )\n\n// Function that takes in a fullBody string and \n// returns the monster description (first paragraph) \n//  \n\n\n\nexport const Head: React.FC<Props> = ({ pageContext }) => (\n  <>\n    <title>{pageContext.title} - AD&D Complete Compendium</title>\n    <meta property=\"og:site_name\" content=\"AD&D 2nd Edition Complete Monstrous Compendium\"/>\n    <meta property=\"og:title\" content={pageContext.monster_data.title  + \" | AD&D Complete Compendium\"}/>\n    <meta property=\"og:description\" content={ getMonsterDescription(pageContext.monster_key ,pageContext.monster_data.fullBody) }/>\n    <meta property=\"og:url\" content={\"https://www.completecompendium.com\" + pageContext.monster_path}/>\n    <meta property=\"og:type\" content=\"website\"/>\n    {\n      pageContext.monster_data.images[1] && pageContext.monster_data.images[1].match(new RegExp(pageContext.monster_key, \"g\")) ?\n      <>\n      <meta property=\"og:image\" content={\"https://www.completecompendium.com/images/monsters/img/\" + pageContext.monster_key + \".gif\"}/>\n      <meta name=\"twitter:image\" content={\"https://www.completecompendium.com/images/monsters/img/\" + pageContext.monster_key + \".gif\"}/>\n    </>\n      :\n      <></>\n    }\n    <meta property=\"og:image:width\" content=\"300\"/>\n    <meta property=\"og:image:height\" content=\"360\"/>\n    \n          \n    {/* <meta name=\"description\" content={ getMonsterDescription(pageContext.monster_key ,pageContext.monster_data.fullBody) } /> */}\n    {/* Image: \"/images/monsters/img/\" + monster_page_data.monster_key + \".gif\" */}\n    <meta name=\"twitter:card\" content=\"summary_large_image\"/>\n    <meta name=\"twitter:url\" content={\"https://www.completecompendium.com\" + pageContext.monster_path} />\n    <meta name=\"twitter:title\" content=\"Advanced Dungeons & Dragons 2nd Edition Complete Compendium\" />\n    <meta name=\"twitter:description\" content={ getMonsterDescription(pageContext.monster_key ,pageContext.monster_data.fullBody) } />\n        \n  </>\n)\n\nexport default MonsterTemplate\n\nexport const query = graphql`\n  {\n    sitePage {\n      pageContext\n    }\n  }\n`","// extracted by mini-css-extract-plugin\nexport var RandomMonsterButton = \"monsterpage-module--RandomMonsterButton--65e5f\";\nexport var StatblockImage = \"monsterpage-module--Statblock-Image--5cd11\";\nexport var bk = \"monsterpage-module--bk--0c7e9\";\nexport var bodyBlocks = \"monsterpage-module--body-blocks--a22b5\";\nexport var cn = \"monsterpage-module--cn--2c6ef\";\nexport var f = \"monsterpage-module--f--f6dca\";\nexport var fi = \"monsterpage-module--fi--5f664\";\nexport var horizontalMonsterLinks = \"monsterpage-module--horizontal-monster-links--21e47\";\nexport var hr1 = \"monsterpage-module--hr1--f5b5c\";\nexport var interweave = \"monsterpage-module--interweave--f54cc\";\nexport var ip = \"monsterpage-module--ip--d7cfc\";\nexport var lastModified = \"monsterpage-module--last-modified--850e5\";\nexport var loading = \"monsterpage-module--loading--0674d\";\nexport var monsterBody = \"monsterpage-module--monster-body--65cac\";\nexport var monsterImage = \"monsterpage-module--monster-image--bb97d\";\nexport var monsterImgFrame = \"monsterpage-module--monster-img-frame--67133\";\nexport var monsterNav = \"monsterpage-module--monster-nav--3c352\";\nexport var monsterNavLink = \"monsterpage-module--monster-nav-link--495ca\";\nexport var monsterNavLinks = \"monsterpage-module--monster-nav-links--c9a5a\";\nexport var ni = \"monsterpage-module--ni--d20dd\";\nexport var pageRandomMonsterButton = \"monsterpage-module--page-random-monster-button--2d0e4\";\nexport var psionicTableData = \"monsterpage-module--psionic-table-data--bec3c\";\nexport var psionicsSummary = \"monsterpage-module--psionics-summary--e13ca\";\nexport var psionicsTable = \"monsterpage-module--psionics-table--3af5a\";\nexport var settingImage = \"monsterpage-module--setting-image--e8b92\";\nexport var sourceList = \"monsterpage-module--source-list--66a63\";\nexport var statblock = \"monsterpage-module--statblock--52b79\";\nexport var topHeader = \"monsterpage-module--top-header--5efbc\";\nexport var tsr = \"monsterpage-module--tsr--2eb82\";\nexport var tsrFooter = \"monsterpage-module--tsr-footer--866d8\";\nexport var tsrLabel = \"monsterpage-module--tsr-label--b394a\";"],"names":["matchHtmlRegExp","module","exports","string","escape","str","match","exec","html","index","lastIndex","length","charCodeAt","substring","Acronyms","require","KeyToTitles","BooksIDToTitles","props","builtBC","path","path_count","text","path_origin","forEach","node","push","React","className","key","Link","to","relative_locs","url","split","shift","Navbar","BreadCrumb","children","Footer","RandomMonsterButton","monster_key","setMonsterKey","useState","getRandomMonster","monsterKeys","Object","keys","AA_KEYS_TITLES","undefined","random_key","max","Math","floor","random","useEffect","onClick","COLORS","Map","tagConfigs","a","content","TYPE_FLOW","self","type","address","invalid","audio","br","void","body","button","caption","parent","col","colgroup","details","dd","dl","dt","figcaption","footer","header","hr","img","li","main","ol","picture","rb","rp","rt","rtc","ruby","source","summary","table","tbody","td","tfoot","th","thead","tr","track","ul","video","wbr","createConfigBuilder","config","tagName","TAGS","freeze","BANNED_TAG_LIST","ALLOWED_TAG_LIST","filter","tag","ATTRIBUTES","alt","cite","class","colspan","controls","datetime","default","disabled","dir","height","href","id","kind","label","lang","loading","loop","media","muted","poster","rel","role","rowspan","scope","sizes","span","start","style","src","srclang","srcset","tabindex","target","title","width","ATTRIBUTES_TO_PROPS","_extends","assign","i","arguments","prototype","hasOwnProperty","call","apply","this","Element","attributes","selfClose","Tag","Filter","attribute","name","value","obj","defineProperty","enumerable","configurable","writable","INVALID_STYLES","StyleFilter","String","INVALID_ROOTS","ALLOWED_ATTRS","OPEN_TOKEN","createDocument","window","document","implementation","createHTMLDocument","Parser","constructor","markup","matchers","filters","_props$allowList","keyIndex","container","createContainer","allowed","Set","allowList","banned","blocked","blockList","applyAttributeFilters","reduce","nextValue","applyNodeFilters","nextNode","applyMatchers","parentConfig","elements","matchedString","elementIndex","parts","matcher","asTag","toLowerCase","getTagConfig","inverseName","isTagAllowed","canRenderChild","tokenizedString","valid","isVoid","partProps","tokenName","propName","slice","greedy","replaceTokens","childConfig","includes","Boolean","convertLineBreaks","noHtml","disableLineBreaks","nextMarkup","replace","_this$props$container","doc","g","INTERWEAVE_SSR_POLYFILL","containerTagName","el","createElement","innerHTML","escapeHtml","extractAttributes","allowAttributes","count","nodeType","attr","newName","isSafe","startsWith","newValue","extractStyleAttribute","Number","parseFloat","styles","Array","from","letter","toUpperCase","common","HTMLAnchorElement","getAttribute","protocol","has","allowElements","parse","parseNode","nodeName","parentNode","noHtmlExceptMatchers","transform","transformOnlyAllowList","mergedText","childNodes","transformed","_children","elementProps","textContent","isArray","nodes","open","startIndex","endIndex","close","RegExp","Markup","_ref","emptyContent","parsedContent","noWrap","baseNoWrap","mainContent","Interweave","disableFilters","disableMatchers","onAfterParse","onBeforeParse","parserProps","allMatchers","allFilters","beforeCallbacks","afterCallbacks","bind","callback","parser","parserNodes","fullBodyString","description","cat_acronyms","sorted_tsr","Head","_ref3","pageContext","property","monster_data","getMonsterDescription","fullBody","monster_path","images","monster_page_data","previous_monster_key","sources","prev_key","next_monster_key","next_key","monster_image","needs_image","image_url","image_placeholder","monsterPageStyles","onError","_ref2","currentTarget","onerror","setting_name","setting","setting_acr","hrClass","titleStyle","color","get","monsterNavWidgets","Layout","map","tsr","horizontalMonsterLinks","hr1","monsterImage","monsterImgFrame","monsterNav","monsterNavLink","monsterNavLinks","pageRandomMonsterButton","settingImage","sourceList","topHeader","tsrLabel"],"sourceRoot":""}