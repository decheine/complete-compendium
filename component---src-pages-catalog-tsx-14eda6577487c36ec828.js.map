{"version":3,"file":"component---src-pages-catalog-tsx-14eda6577487c36ec828.js","mappings":"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","sources":["webpack://adnd-compendium-static-frontend/./src/components/BookCard.tsx","webpack://adnd-compendium-static-frontend/./src/styles/modules/bookcard.module.css","webpack://adnd-compendium-static-frontend/./src/components/CategoriesList.tsx","webpack://adnd-compendium-static-frontend/./src/components/AllBooksList.tsx","webpack://adnd-compendium-static-frontend/./src/styles/modules/catalog.module.css","webpack://adnd-compendium-static-frontend/./src/pages/catalog.tsx"],"sourcesContent":["import React from 'react';\n\n/**\n * \n * @param {*} props \n * img = path to image file\n * description = description card text\n * header = header text\n * @returns \n */\n\n\n// import \"./BookCard.css\"\n\nimport * as bookCardStyle from \"@styles/modules/bookcard.module.css\"\n\n// BookCard props type\ntype BookCardProps = {\n    id: string,\n    category: string,\n    title: string\n}\n\nfunction BookCard(props: BookCardProps){\n    let image_url = '/images/Books/Hi Resolution/' +  props.id + '.jpg'\n    let image_placeholder = \"/img/placeholder.svg\"\n\n    let book_image = null;\n    book_image = <img    src={image_url} \n            className = {bookCardStyle.book_img2}\n            alt={props.title + 'Cover art'} \n            title={props.title} \n            loading='lazy'\n            onError={({currentTarget}) => {\n                currentTarget.onerror = null;\n                currentTarget.alt = \"This monster is missing it's image. It will be found eventually.\";\n                currentTarget.src = image_placeholder;\n                currentTarget.title = \"Missing book cover image of \" + props.title;\n            }}/>\n    return (\n        \n\n        \n        <div className={bookCardStyle.bookCard}>\n            <div className={bookCardStyle.bookCardHeaderRectangle}>\n                <p className={bookCardStyle.bookCardHeader}>{props.title}</p>\n            </div>\n            <div className={bookCardStyle.book_arrow}>\n                <div className={bookCardStyle.book_pointLeft}></div>\n                <div className={bookCardStyle.book_line}></div>\n                <div className={bookCardStyle.book_pointRight}></div>\n            </div>\n            {/* <Link to={`/catalog/${props.category}/${props.id}`}  className={bookCardStyle.bookLink}>\n            <div className={bookCardStyle.hover14 column}>\n                <figure>\n                    <img className={bookCardStyle.book_img-2} src={'/images/Books/Hi Resolution/' +  props.id + '.jpg'} alt={props.title}/>\n                </figure>\n                </div>\n            </Link> */}\n            <a href={`/catalog/${props.category}/${props.id}`}  className={bookCardStyle.bookLink}>\n            <div className={bookCardStyle.hover01}>\n                <figure>\n                    {book_image}\n                </figure>\n                </div>\n            </a>\n            <div className={bookCardStyle.group12}>\n                <div className={bookCardStyle.bookCardFooterRectangle}>\n                    <p className={bookCardStyle.bookCardDescriptionText}>{props.id}</p>\n                </div>\n            </div>\n        </div>\n        \n        \n    )\n}\n  \n  export default BookCard;","// extracted by mini-css-extract-plugin\nexport var bookCard = \"bookcard-module--book-card--80c92\";\nexport var bookCardDescriptionText = \"bookcard-module--book-card-description-text--136e3\";\nexport var bookCardFooterRectangle = \"bookcard-module--book-card-footer-rectangle--90228\";\nexport var bookCardHeader = \"bookcard-module--book-card-header--1db8a\";\nexport var bookCardHeaderRectangle = \"bookcard-module--book-card-header-rectangle--5729a\";\nexport var bookLink = \"bookcard-module--book-link--0cee9\";\nexport var book_arrow = \"bookcard-module--book_arrow--25480\";\nexport var book_img2 = \"bookcard-module--book_img-2--b8199\";\nexport var book_line = \"bookcard-module--book_line--e18a0\";\nexport var book_pointLeft = \"bookcard-module--book_point-left--f3a5e\";\nexport var book_pointRight = \"bookcard-module--book_point-right--1535f\";\nexport var group12 = \"bookcard-module--group-1-2--918c9\";\nexport var hover01 = \"bookcard-module--hover01--6e188\";\nexport var hover14 = \"bookcard-module--hover14--21e01\";\nexport var shine = \"bookcard-module--shine--696a5\";","import React, { useEffect, useState } from \"react\";\n\n// REFACTOR THIS To instead call API to get the data it needs\n// and then build the result.\n\nimport './CategoriesList.css'\n// import CatAcronyms from '../../../data/CatAcronyms.json'\nconst ACRONYMS = require('../data/CatAcronyms.json')\nconst WORLDS = require('../data/CatWorlds.json')\n// import { Router, Switch, Route } from 'react-router';\n\n// import { SettingPage } from \"./SettingPage\";\n\nimport data_settings from '../data/settings.json'\n\ntype SettingType = {\n    setting_key: string,\n    setting_name: string,\n    source_books: Array<string>,\n    createdAt: string,\n    updatedAt: string\n  }\n\nexport function CategoriesList(){\n    const [settings, setSettings] = useState(new Array<SettingType>())\n    const [settingNames, setNames] = useState(new Array<string>())\n    \n    // create a map from setting to book list from the global.settings\n\n    useEffect(() => {\n        const fetchData = async () => {\n            // get the data from the api\n            const dataSettings = data_settings\n        \n            var tmpNames = new Array<string>()\n            for(let i = 0; i < dataSettings.length; i++){\n                tmpNames.push(dataSettings[i].setting_name);\n            }\n\n            // set state with the result\n            setSettings(dataSettings)\n            setNames(tmpNames)\n        }\n        \n        // call the function\n        fetchData()\n        \n        \n    }, [])\n\n    \n    // console.log(\"settings: \", settings, settingNames)\n\n    return (\n        <>\n        \n        \n        <div className=\"CategoryList\">\n            {settingNames.map(( category: string)=>{\n                return (\n                    <div className={\"setting-frame\"} title={category} key={category}>\n                        <a href={`/catalog/${ACRONYMS[category]}`} className=\"category\">\n                            <div className=\"setting-button\">\n                                <img className=\"catImg\" src={'/images/grf/' +  ACRONYMS[category] + '.gif'} alt={category + 'image'}></img>\n                                \n                                <div className=\"setting-subtitle\">\n                                    <div className=\"setting-title\">{category}</div>\n                                    <div className=\"setting-world\">{WORLDS[category]}</div>\n                                </div>\n                            </div>\n                        </a>\n                    </div>\n                );\n            })}\n        </div>\n        \n        </>\n    )\n    \n}","import React from 'react'\nimport BookCard from './BookCard'\n\n// import './BookList.css'\nconst BOOKS = require('../data/sortedtsr.json')\nconst Categories = require('../data/Categories.json')\nconst CatAcronyms = require('../data/CatAcronyms.json')\n\nconst bookListStyle = {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-evenly\"\n}\n\nexport function AllBooksList() {\n\n    const items = []\n    // console.log(BOOKS)\n    // Iterate through all BOOKS and push a BookCard for each one\n    var books_setting: any = {}\n    for (const [index, value] of Object.entries(Categories)){\n        for(const val of value as string[]){\n            books_setting[val] = CatAcronyms[index]     \n        }\n        // books_setting[value as string] = CatAcronyms[index]\n    }\n\n    for (const [index] of Object.entries(BOOKS)){\n        // console.log(index, value)\n        items.push(<BookCard key={index} id={index} category={books_setting[index]} title={BOOKS[index as string]}/> )\n    }\n    \n    return (\n        <div style={bookListStyle}>\n        {items}\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport var CatalogDescription = \"catalog-module--CatalogDescription--ab901\";\nexport var backgroundCatalog = \"catalog-module--background-catalog--03141\";\nexport var catalogTitle = \"catalog-module--catalog-title--8fbbd\";\nexport var h1 = \"catalog-module--h1--9995a\";","import React from 'react'\nimport Layout from '../components/Layout';\n\nimport { CategoriesList } from '../components/CategoriesList';\nimport { AllBooksList } from '../components/AllBooksList';\n\nimport * as catalogStyle from '@styles/modules/catalog.module.css'\n\nexport function catalog() {\n    if(typeof document !== 'undefined'){\n      document.title = \"Catalog - Complete Compendium\"\n    }\n    return (\n        // upper page with category links\n      <>\n      <Layout>\n      {/* <NavBar/> */}\n        <div className='backgroundCatalog'>\n          <h2 className='catalogTitle' id='settings'>All Campaign Settings</h2>\n          <div className={catalogStyle.CatalogDescription}>\n              Browse monster books by setting or browse all at once.\n          </div>\n          <CategoriesList/>\n          {/* All Books */}\n          <h2 className={catalogStyle.catalogTitle} id='books'>All Books</h2>\n          <AllBooksList/>\n        </div>\n      </Layout>\n      </>\n      // lower page with all book list\n    );\n}\nexport default catalog;"],"names":["props","image_url","id","book_image","React","src","className","alt","title","loading","onError","_ref","currentTarget","onerror","href","category","ACRONYMS","require","WORLDS","CategoriesList","settings","setSettings","useState","Array","settingNames","setNames","useEffect","async","dataSettings","data_settings","tmpNames","i","length","push","setting_name","fetchData","map","key","BOOKS","Categories","CatAcronyms","bookListStyle","display","flexWrap","justifyContent","AllBooksList","items","books_setting","index","value","Object","entries","val","BookCard","style","CatalogDescription","catalogTitle","catalog","document","Layout","catalogStyle"],"sourceRoot":""}