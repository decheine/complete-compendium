{"version":3,"file":"component---src-templates-setting-tsx-2613234aff30df672dd3.js","mappings":"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","sources":["webpack://complete-compendium/./src/components/BookList.tsx","webpack://complete-compendium/./src/templates/setting.tsx","webpack://complete-compendium/./src/styles/modules/book.module.css"],"sourcesContent":["import React from 'react'\nimport BookCard from './BookCard'\nimport BookListView from './BookListView'\nimport CSS from 'csstype';\n\n// import './BookList.css'\nconst Categories = require('@data/Categories.json')\nconst Acronyms = require('@data/AcronymsSetting.json')\n// const BOOKS = require('@data/sortedtsr.json')\nconst BOOKS = require('../../data/all_tsr.json')\n\nconst catalog_data = require('@data/Full_Catalog.json')\n\nconst settings_json = require('../../data/settings.json')\n\n\n// List View Buttons\n\n\ntype setting_book_type = {\n    setting_key: string,\n    setting_name: string,\n    source_books: Array<string>\n}\n\n\ntype BookObjectType = {\n    author: string,\n    monster_keys: Array<string>,\n    publish_id: string,\n    setting: string,\n    title: string,\n    year: string\n}\n\nexport function BookList(props: any) {\n    const cardViewStyle: CSS.Properties = {\n        display: \"flex\",\n        // flexWrap: \"wrap\",\n        justifyContent: \"space-evenly\",\n    }\n\n    const listViewStyle: CSS.Properties = {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-evenly\",\n        flexDirection: \"column\"\n    }\n\n    // console.log(\"Booklist: \", props.category)\n    let setting_books: string[] = []\n    settings_json.forEach((target_book: setting_book_type) => {\n        if (target_book.setting_name == Acronyms[props.category]) {\n            setting_books = target_book.source_books\n        }\n    })\n    const books = Categories[Acronyms[props.category]]\n    // console.log(books)\n    const card_items = []\n    const list_items = []\n    books.sort()\n    for (const [index, value] of books.entries()) {\n        // console.log(index)\n        card_items.push(<BookCard key={value} id={value} category={props.category} title={BOOKS[value]?.title} />)\n    }\n\n    console.log(setting_books)\n\n    for (const [index, publish_id] of setting_books.entries()) {\n\n        var book_object = catalog_data.find((obj: { publish_id: string }) => {\n            return obj.publish_id === publish_id\n        })\n        // console.log(index)\n        list_items.push(<BookListView key={publish_id} id={publish_id} category={props.category} title={BOOKS[publish_id]?.title} author={book_object?.author} book_object={book_object} />)\n    }\n\n\n\n    return (\n        <div style={listViewStyle}>\n            {list_items}\n        </div>\n    )\n}","\n\nimport React from \"react\";\n\nimport Layout from \"@components/Layout\";\n// import * as settingStyles from \"@styles/modules/settings.module.css\"\n\nimport { BookList } from \"@components/BookList\";\nimport { Link } from \"gatsby\";\n\nimport * as bookStyles from '@styles/modules/book.module.css'\n\n\n// import './SettingPage.css'\nconst ACRONYMS = require('@data/CatAcronyms.json')\nconst AcronymToSetting = require('@data/AcronymsSetting.json')\nconst KeyToTitles = require('@data/AA_KEYS_TITLES.json')\nconst settings = require(\"../../data/settings.json\")\nconst Catalog = require('@data/Full_Catalog.json')\n\n// Input Structure\ninterface CategoryProps {\n    category: string\n}\n\nconst settingImgStyle = {\n    display: \"flex\",\n    width: \"fit-content\",\n    alignContent: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginBottom: \"3em\",\n}\n\nconst headerImgStyle = {\n    width: \"100%\"\n}\n\ntype MonsterDataType = {\n    TSR: string[],\n    fullBody: string,\n    images: string[],\n    setting: string,\n    statblock: Object,\n    title: string\n}\n\ntype MonsterPageContext = {\n    monster_key: string\n    monster_data: MonsterDataType\n    sources: string[]\n    statblock_names: string[]\n    title: string\n    prev_key: string\n    next_key: string\n}\n\n\ntype SettingDataWrapper = {\n    category: string\n    // workaround syntax warning fix,\n    // the following aren't used in reality, only\n    // monster_page\n    // books: string[]\n}\n\ninterface Props {\n    pageContext: SettingDataWrapper\n}\n\ninterface BookMonstersProps {\n    setting_key: string\n}\n\ntype setting_type = {\n    setting_key: string,\n    setting_name: string,\n    source_books: Array<string>\n}\n\ntype catalog_entry = {\n    author: string,\n    monster_keys: string[],\n    publish_id: string,\n    setting: string,\n    title: string,\n    year: string\n}\n\n\n// List of monster\nfunction BookMonstersList(props: BookMonstersProps) {\n    console.log(props)\n    let setting_books: string[] = []\n    settings.forEach((target_setting: setting_type) => {\n        if (target_setting.setting_key == props.setting_key) {\n            setting_books = target_setting.source_books\n        }\n    })\n    console.log(setting_books)\n    let setting_monsters: string[] = []\n    let setting_book_monsters = {}\n    let monster_links: JSX.Element[] = []\n\n    \n\n\n    Catalog.forEach((book: catalog_entry) => {\n        if (setting_books.includes(book.publish_id)){\n            // append this books mosnters to setting_monsters\n            setting_book_monsters[book.publish_id] = book.monster_keys\n        }\n    })\n    console.log(\"Setting book monsters\")\n    \n    console.log(setting_book_monsters)\n\n    setting_books.forEach((publish_id: string) => {\n        console.log(publish_id)\n        console.log(setting_book_monsters[publish_id])\n        setting_book_monsters[publish_id].forEach((monster_key: string) => {\n            monster_links = monster_links.concat(\n                <>\n                <Link to={'/catalog/' + props.setting_key + \"/\" + publish_id + \"/\" + monster_key} className={bookStyles.listLink} key={monster_key}>\n                          <div className={bookStyles.listEntry} >\n                              {KeyToTitles[monster_key]}\n                          </div>\n                          </Link>\n                </>\n            )\n        });\n    })\n\n\n    return monster_links\n\n}\n\n\nconst SettingTemplate: React.FC<Props> = ({ pageContext }) => {\n    // const the_category = props.category;\n    if(pageContext.category === undefined){\n        console.log(\"category undefined\")\n        return (\n            <>\n            </>\n        )\n    } else {\n        // console.log(\"setting acronym: \", pageContext.category)\n        return (\n            <>\n                <Layout url={`/catalog/${pageContext.category}`}>\n\n                    {/* <div className={settingStyles.settingLogo}> */}\n                    <div style={settingImgStyle}>\n                        <img style={headerImgStyle} src={'/images/grf/' +  pageContext.category + '.gif'} alt={AcronymToSetting[pageContext.category] + 'category image'}></img>\n                    </div>\n                    \n                    <BookList category={pageContext.category}/>\n                    List of all monsters across these books.\n                    <BookMonstersList setting_key={pageContext.category}/>\n\n                </Layout>\n            </>\n        )\n        \n    }\n}\n\nexport const Head: React.FC<Props> = ({ pageContext }) => (\n    <>\n      <title>{AcronymToSetting[pageContext.category]} - AD&D Complete Compendium</title>\n      <meta property=\"og:site_name\" content=\"AD&D 2nd Edition Complete Monstrous Compendium\"/>\n      <meta property=\"og:title\" content={AcronymToSetting[pageContext.category]  + \" | AD&D Complete Compendium\"}/>\n      <meta property=\"og:description\" content={ \"Catalog page, for the \" + AcronymToSetting[pageContext.category] + \"campaign settings\" }/>\n      <meta property=\"og:url\" content={\"https://www.completecompendium.com\" + '/Catalog/' +  pageContext.category}/>\n      <meta property=\"og:type\" content=\"website\"/>\n      {\n        <>\n        <meta property=\"og:image\" content={\"https://www.completecompendium.com\" + '/images/grf/' +  pageContext.category + '.gif'}/>\n        <meta name=\"twitter:image\" content={\"https://www.completecompendium.com\" + '/images/grf/' +  pageContext.category + '.gif'}/>\n      </>\n      }\n      <meta property=\"og:image:width\" content=\"300\"/>\n      <meta property=\"og:image:height\" content=\"360\"/>\n      \n            \n      {/* <meta name=\"description\" content={ getMonsterDescription(pageContext.monster_key ,pageContext.monster_data.fullBody) } /> */}\n      {/* Image: \"/images/monsters/img/\" + monster_page_data.monster_key + \".gif\" */}\n      <meta name=\"twitter:card\" content=\"summary_large_image\"/>\n      <meta name=\"twitter:url\" content={\"https://www.completecompendium.com/catalog/\" + pageContext.category} />\n      <meta name=\"twitter:title\" content=\"Advanced Dungeons & Dragons 2nd Edition Complete Compendium\" />\n      <meta name=\"twitter:description\" content={ \"Catalog page, for the \" + AcronymToSetting[pageContext.category] + \"campaign settings\" } />\n          \n    </>\n  )\n  \n\nexport default SettingTemplate;\n\n","// extracted by mini-css-extract-plugin\nexport var background = \"book-module--background--628d3\";\nexport var card1 = \"book-module--card-1--5f083\";\nexport var cardBody = \"book-module--card-body--c1e5b\";\nexport var cardImg = \"book-module--card-img--018d7\";\nexport var cardText = \"book-module--card-text--b77df\";\nexport var cardTitle = \"book-module--card-title--4a337\";\nexport var col1 = \"book-module--col-1--d138f\";\nexport var col2 = \"book-module--col-2--988b3\";\nexport var frame = \"book-module--frame--4bd8d\";\nexport var listContainer = \"book-module--list-container--e18ae\";\nexport var listEntry = \"book-module--list-entry--943d3\";\nexport var listFlexbox = \"book-module--list-flexbox--35e0c\";\nexport var listLink = \"book-module--list-link--2a6a4\";\nexport var results = \"book-module--results--f410b\";"],"names":["Categories","require","Acronyms","BOOKS","catalog_data","settings_json","BookList","props","setting_books","forEach","target_book","setting_name","category","source_books","books","card_items","list_items","sort","index","value","entries","_BOOKS$value","push","React","BookCard","key","id","title","console","log","publish_id","_BOOKS$publish_id","_book_object","book_object","find","obj","BookListView","author","style","display","flexWrap","justifyContent","flexDirection","AcronymToSetting","KeyToTitles","settings","Catalog","settingImgStyle","width","alignContent","alignItems","marginLeft","marginRight","marginBottom","headerImgStyle","BookMonstersList","target_setting","setting_key","setting_book_monsters","monster_links","book","includes","monster_keys","monster_key","concat","Link","to","className","bookStyles","Head","_ref2","pageContext","property","content","name","_ref","undefined","Layout","url","src","alt","card1","cardBody","cardImg","cardText","cardTitle","col1","col2","listEntry","listLink"],"sourceRoot":""}