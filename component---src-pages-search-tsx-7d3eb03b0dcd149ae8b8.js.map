{"version":3,"file":"component---src-pages-search-tsx-7d3eb03b0dcd149ae8b8.js","mappings":"iMAYA,MAAMA,EAAWC,EAAQ,MACnBC,EAAcD,EAAQ,MACtBE,EAAkBF,EAAQ,MA+HhC,MA3FqBG,IACjB,IAAIC,EAAe,GACfC,EAAO,GACPC,EAAa,EACbC,EAAO,GAIPC,EAAcL,EAAME,KAAK,GAyE7B,OAvEAF,EAAME,KAAKI,SAAQC,IAEf,OAAQF,GACJ,IAAK,WACD,OAAQF,GACJ,KAAK,EACDC,EAAOG,EACP,MACJ,KAAK,EACDH,EAAON,EAAYS,GACnB,MACJ,QACIH,EAAO,UAEf,MACJ,IAAK,UACD,OAAOD,GACH,KAAK,EACDC,EAAOG,EACP,MACJ,KAAK,EACDH,EAAOR,EAASW,GAChB,MACJ,KAAK,EACDH,EAAOL,EAAgBQ,GACvB,MACJ,KAAK,EACDH,EAAON,EAAYS,GACnB,MACJ,QACIH,EAAM,UAGd,MACJ,IAAK,QACD,GACS,IADFD,EAECC,EAAOG,OAGPH,EAAO,QAMvBF,GAAS,IAAGK,IAEK,GAAdJ,GACCF,EAAQO,KACJC,EAAAA,cAAA,OAAKC,UC7GC,sCD6GoCC,IAAM,SAAQJ,KAAQ,MAMxEN,EAAQO,KAGAC,EAAAA,cAACG,EAAAA,KAAI,CAACF,UCnHC,uCDmHqCG,GAAIX,EAAMS,IAAKJ,GAAOH,EAAK,MAK/ED,GAAY,IAQZM,EAAAA,cAAA,OAAKC,UC/HQ,sCDkIRT,EACDQ,EAAAA,cAAA,OAAKC,UCtIC,oCDuIJ,E,UEnFZ,MA7BcV,IAGZ,MAAMc,EAAgBd,EAAMe,IAAIC,MAAM,KAWtC,OATGF,EAAcG,OACfH,EAAcI,QASdT,EAAAA,cAAA,OAAKC,UCrCgB,wCDsCnBD,EAAAA,cAACU,EAAAA,EAAM,MACPV,EAAAA,cAAA,OAAKC,UCzCO,gCD0CZD,EAAAA,cAACW,EAAU,CAAClB,KAAMY,IAEfd,EAAMqB,UAETZ,EAAAA,cAACa,EAAAA,EAAM,MACH,C,mIE/BL,SAASC,IAIZ,MAHuB,oBAAbC,WACNA,SAASC,MAAQ,+BAIrBhB,EAAAA,cAAAA,EAAAA,SAAA,KACAA,EAAAA,cAACiB,EAAAA,EAAM,CAACX,IAAI,WACRN,EAAAA,cAAA,OAAKC,UAAU,iBACfD,EAAAA,cAAA,YACIA,EAAAA,cAAA,UAAI,UACJA,EAAAA,cAAA,UAAI,6GAEJA,EAAAA,cAAA,WAAK,sBACcA,EAAAA,cAACG,EAAAA,KAAI,CAACC,GAAG,aAAY,YAAe,+BAYnE,CAIO,SAASc,EAAK3B,GACjB,OACES,EAAAA,cAAAA,EAAAA,SAAA,KACAA,EAAAA,cAAA,aAAO,wCAIX,CATF,W","sources":["webpack://complete-compendium/./src/components/BreadCrumb.tsx","webpack://complete-compendium/./src/styles/modules/breadcrumb.module.css","webpack://complete-compendium/./src/components/Layout.tsx","webpack://complete-compendium/./src/styles/modules/layout.module.css","webpack://complete-compendium/./src/pages/search.tsx"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\n/**\n * Breadcrum react component that displays the current page's breadcrumb\n * Showing Catalog > Setting > Book\n */\n\n// Breadcrum react component that displays the current page's breadcrumb showing Catalog > Setting > Book\nimport * as breadcrumbStyle from \"@styles/modules/breadcrumb.module.css\"\n\n// import { title } from 'process';\nconst Acronyms = require('@data/AcronymsSetting.json')\nconst KeyToTitles = require('@data/AA_KEYS_TITLES.json')\nconst BooksIDToTitles = require('@data/sortedtsr.json')\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { library, dom } from '@fortawesome/fontawesome-svg-core'\nimport {\n    faCoffee,\n    faAddressBook,\n    faAirFreshener,\n    faAmbulance,\n    faAtom,\n    faBus,\n    faCoins,\n    faDice,\n    faAngleRight\n  } from '@fortawesome/free-solid-svg-icons'\n// class BreadCrumbElement extends React.Component {\n\nfunction BreadCrumbElement (props: {link: string, text: string}) {\n    return (\n        <>\n        <Link to={props.link} className='bc-element'>\n            {\n            props.text\n           }\n        </Link>\n        </>\n    )\n}\n\n// Specify types for Props and State\ntype MyProps = {\n    path: string[]\n}\n\n\n\n// 👇️ we set the props to empty object, and set the state to {value: string}\nconst BreadCrumb = ( props: MyProps) => {\n    var builtBC: any = [];\n    var path = \"\"\n    var path_count = 0;\n    var text = \"\"\n\n    // console.log(\"breadcrumb\", props)\n    \n    var path_origin = props.path[0]\n\n    props.path.forEach(node => {\n\n        switch (path_origin){\n            case \"appendix\":\n                switch (path_count) {\n                    case 0:\n                        text = node\n                        break;\n                    case 1: // Monster title\n                        text = KeyToTitles[node]\n                        break;\n                    default:\n                        text = \"APendix\"\n                }\n                break;\n            case \"catalog\":\n                switch(path_count) {\n                    case 0: // Catalog\n                        text = node\n                        break;\n                    case 1: // Setting\n                        text = Acronyms[node]\n                        break;\n                    case 2: // Book\n                        text = BooksIDToTitles[node]\n                        break;\n                    case 3: // Monster\n                        text = KeyToTitles[node]\n                        break;\n                    default:\n                        text= \"Catalog\"\n                }\n\n                break;\n            case \"about\":\n                switch(path_count){\n                    case 0:\n                        text = node\n                        break;\n                    default:\n                        text = \"About\"\n                }\n\n                break;\n        }\n\n        path += `/${node}`\n\n        if(path_count != 0){\n            builtBC.push(\n                <div className={breadcrumbStyle.arrowBox} key={`arrow-${node}`}>\n                    /\n                    {/* <FontAwesomeIcon icon={faAngleRight} className={breadcrumbStyle.rightArrow} /> */}\n                </div>\n            )\n        }\n        builtBC.push(\n        \n            // <div className={breadcrumbStyle.breadcrumb} key={node}>\n                <Link className={breadcrumbStyle.bcElement} to={path} key={node}>{text} </Link>\n            )\n        // builtBC.push(\n        //     <FontAwesomeIcon icon=\"angle-right\" className='right-arrow' />\n        // )\n        path_count++\n    }\n    )\n    // <div className={breadcrumbStyle.bcElement}>{x}</>\n\n\n\n    return (\n        <div className={breadcrumbStyle.bcFrame}>\n            {/* {props.path} */}\n            {/* <div className={breadcrumbStyle.startCap}/> */}\n            {builtBC}\n            <div className={breadcrumbStyle.bcBg}/>\n        </div>\n    )\n}\n\nexport default BreadCrumb;\n\n","// extracted by mini-css-extract-plugin\nexport var arrowBox = \"breadcrumb-module--arrow-box--8f143\";\nexport var bcBg = \"breadcrumb-module--bc-bg--8b107\";\nexport var bcCatalog = \"breadcrumb-module--bc-catalog--653f8\";\nexport var bcElement = \"breadcrumb-module--bc-element--36f40\";\nexport var bcFrame = \"breadcrumb-module--bc-frame--78140\";\nexport var breadcrumb = \"breadcrumb-module--breadcrumb--8d16f\";\nexport var rightArrow = \"breadcrumb-module--right-arrow--1e6a3\";\nexport var startCap = \"breadcrumb-module--start-cap--ca81e\";","import React from \"react\"\nimport { PropsWithChildren } from 'react'\n\nimport Navbar from \"./Navbar\";\nimport BreadCrumb from \"./BreadCrumb\";\n// import './Layout.css'\nimport * as layoutStyle from '@styles/modules/layout.module.css'\n\nimport Footer from \"./Footer\";\n/**\n * \n * @param param0 \n * @returns \n * \n * \n * \n * \n */\n\ntype LayoutProps = {\n  url: string\n}\n\n\n\nconst Layout = (props: PropsWithChildren<LayoutProps>) => {\n    // const url = typeof window !== 'undefined' ? window.location.pathname : '';\n    // split path\n    const relative_locs = props.url.split(\"/\")\n    // console.log(\"Layout props\",props, relative_locs)\n    if(relative_locs.length < 3){\n      relative_locs.shift();\n      \n    } else {\n      // relative_locs.pop();\n      relative_locs.shift();\n    }\n    // console.log(relative_locs)\n    // console.log(relative_locs)\n    return (\n      <div className={layoutStyle.layoutWrapper}>\n        <Navbar/>\n        <div className={layoutStyle.layout}>\n        <BreadCrumb path={relative_locs}/>\n          {/* {pathname !== \"/\" ? <BreadCrumb title={breadCrumbs[1]} setting={breadCrumbs[2]} book={breadCrumbs[3]} monster_key={breadCrumbs[4]}/> : null} */}\n          {props.children}\n        </div>\n        <Footer/>\n      </div>\n    );\n};\n\n\n\n  export default Layout","// extracted by mini-css-extract-plugin\nexport var layout = \"layout-module--layout--d56eb\";\nexport var layoutMain = \"layout-module--layout-main--c275b\";\nexport var layoutWrapper = \"layout-module--layout-wrapper--c2f92\";","import React from \"react\"\n\nimport ZoomImage from '../components/ZoomImage';\nimport TableOfContents from '../components/TableOfContents';\n\nimport './about.css';\nimport Layout from \"../components/Layout\";\nimport { HeadProps, Link } from \"gatsby\";\n\ntype DataProps = {\n    site: {\n      siteMetadata: {\n        title: string\n      }\n    }\n  }\n\nexport function searchPage() {\n    if(typeof document !== 'undefined'){\n        document.title = \"Complete Compendium - About\"\n    }\n    return (\n        // upper page with category links\n    <>\n    <Layout url='/search'>\n        <div className=\"about-wrapper\">\n        <main>\n            <h1>Search</h1>\n            <em>\n            Search functionality is offline until I can figure out how to do it statically, without dedicated servers.\n            <br/>\n            Tip: Ctrl+F on the <Link to=\"/appendix\">Appendix</Link> page works fairly well.\n            </em>\n            \n\n        </main>\n        </div>\n    </Layout>\n            \n    </>\n\n        // lower page with all book list\n    );\n}\n\nexport default searchPage;\n\nexport function Head(props: HeadProps<DataProps>) {\n    return (\n      <>\n      <title>Search - AD&D 2e Complete Compendium</title>\n      \n      </>\n    )\n  }"],"names":["Acronyms","require","KeyToTitles","BooksIDToTitles","props","builtBC","path","path_count","text","path_origin","forEach","node","push","React","className","key","Link","to","relative_locs","url","split","length","shift","Navbar","BreadCrumb","children","Footer","searchPage","document","title","Layout","Head"],"sourceRoot":""}